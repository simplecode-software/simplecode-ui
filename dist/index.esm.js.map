{"version":3,"file":"index.esm.js","sources":["../src/constants/common.ts","../src/constants/default-theme.ts","../src/constants/empty.ts","../src/hooks/use-switch.ts","../src/hooks/use-callback-ref.ts","../src/hooks/use-flag.ts","../src/hooks/use-input.ts","../src/hooks/use-mention.ts","../src/hooks/use-mounted.ts","../src/hooks/use-press-buttons.ts","../src/hooks/use-string-option.ts","../src/utils/theme/hash-into-color.ts","../src/utils/theme/take-spec-color.ts","../src/utils/theme/theme-borders.ts","../src/utils/theme/theme-colors.ts","../src/utils/theme/theme-shadows.ts","../src/utils/theme/theme-shapes.ts","../src/utils/log-interface.ts","../src/utils/get-anchors.ts","../src/utils/get-conditional-items.ts","../src/utils/get-css-args.ts","../src/utils/get-css-sides.ts","../src/utils/get-error-message.ts","../src/utils/get-margins.ts","../src/utils/get-mentions.ts","../src/utils/get-paddings.ts","../src/utils/get-plural-form.ts","../src/utils/get-random-color.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../src/utils/get-theme-getter.ts","../src/utils/objectify.ts","../src/utils/remove-item.ts","../src/utils/replace-item.ts","../src/utils/toaster.ts","../src/utils/to-error.ts","../src/utils/update-item.ts","../src/utils/validate-email.ts","../src/utils/with-async.tsx","../src/utils/with-boundary.tsx","../src/SimpleCodeUiContext/SimpleCodeUiContext.tsx","../src/Flex/Flex.tsx","../src/Abs/Abs.tsx","../src/TextFragment/TextFragment.tsx","../src/IconEmpty/IconEmpty.tsx","../src/ThemeContext/ThemeContext.tsx","../src/Icon/Icon.tsx","../src/MentionContext/MentionContext.tsx","../src/Mention/Mention.tsx","../src/Txt/Mentions.tsx","../src/Txt/Highlighted.tsx","../src/Txt/Txt.tsx","../src/Button/utils/get-button-padding.ts","../src/Button/utils/get-icon-props.ts","../src/Button/hooks/use-button-style.tsx","../src/ModalSelect/ModalSelect.tsx","../src/Button/Button.tsx","../src/ButtonCheck/ButtonCheck.tsx","../src/ListProgressive/hooks/use-progressive-array.ts","../src/ListProgressive/ListProgressive.tsx","../src/ButtonGroup/ButtonGroup.tsx","../src/ButtonRadio/ButtonRadio.tsx","../src/ButtonGroupRadio/ButtonGroupRadio.tsx","../src/Checkbox/Checkbox.tsx","../src/Divider/Divider.tsx","../src/ListItem/ListItem.tsx","../src/InputZone/InputZone.tsx","../src/Input/Input.tsx","../src/KeyboardContext/KeyboardContext.tsx","../src/List/List.tsx","../src/LoadingIcon/LoadingIcon.tsx","../src/Loading/Loading.tsx","../src/LoadingView/LoadingView.tsx","../src/MentionProvider/MentionProvider.tsx","../src/Modal/Modal.tsx","../src/ModalContext/ModalContext.tsx","../src/Section/Section.tsx","../src/Select/Select.tsx","../src/SimpleCodeUiProvider/SimpleCodeUiProvider.tsx","../src/Switch/Switch.tsx","../src/Tabs/Tabs.tsx","../src/TestMock/TestMock.tsx","../src/ThemeProvider/ThemeProvider.tsx","../src/Toast/Toast.tsx"],"sourcesContent":["import React from 'react';\n\n\nexport const hiddenStyle: React.CSSProperties = {\n    position: 'absolute',\n    width: 0,\n    maxWidth: 0,\n    height: 0,\n    maxHeight: 0,\n    padding: 0,\n    overflow: 'hidden',\n};\n\nexport const fullStyle: React.CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n};\n","import React from 'react';\nimport {\n    TTheme,\n    TThemeShadowsText,\n    TThemeShapes,\n    TThemeShadows,\n    TDirectionalStyle,\n    TThemeBorders,\n    TThemeSizes,\n    TPresetColors,\n    TColorSet,\n} from '../types';\n\n\nconst specColors = {\n    black: '#000000',\n    white: '#FFFFFF',\n};\n\nconst sizes: TThemeSizes = {\n    font: {\n        xxsm: 12,\n        xsm: 12,\n        sm: 14,\n        md: 16,\n        lg: 18,\n        xlg: 20,\n        xxlg: 20,\n        auto: 16,\n    },\n    line: {\n        xxsm: 20,\n        xsm: 20,\n        sm: 22,\n        md: 24,\n        lg: 26,\n        xlg: 28,\n        xxlg: 28,\n        auto: null,\n    },\n    button: {\n        xxsm: 30,\n        xsm: 36,\n        sm: 42,\n        md: 48,\n        lg: 54,\n        xlg: 60,\n        xxlg: 66,\n        auto: null,\n    },\n    icon: {\n        xxsm: 28,\n        xsm: 32,\n        sm: 36,\n        md: 40,\n        lg: 44,\n        xlg: 48,\n        xxlg: 52,\n        auto: null,\n    },\n    item: {\n        xxsm: 36,\n        xsm: 42,\n        sm: 48,\n        md: 54,\n        lg: 60,\n        xlg: 66,\n        xxlg: 72,\n        auto: null,\n    },\n    divider: {\n        xxsm: 0.2,\n        xsm: 0.4,\n        sm: 0.8,\n        md: 1,\n        lg: 2,\n        xlg: 3,\n        xxlg: 4,\n        auto: null,\n    },\n};\n\nconst fonts: Record<string, React.CSSProperties | null> = {\n    regular: null,\n    semi: null,\n    bold: null,\n    mono: null,\n};\n\nconst shadows: TThemeShadows = {\n    none: null,\n    sm: null,\n    md: null,\n    lg: null,\n};\n\nconst shadowsText: TThemeShadowsText = {\n    none: null,\n    sm: null,\n    md: null,\n};\n\n\nconst getTopShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: radius,\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n});\nconst getBottomShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: radius,\n    borderBottomLeftRadius: radius,\n});\nconst getLeftShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: radius,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: radius,\n});\nconst getRightShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: radius,\n    borderBottomLeftRadius: 0,\n});\n\nconst getShapesForRadius = (radius: number): TDirectionalStyle => ({\n    all: { borderRadius: radius },\n    top: getTopShape(radius),\n    bottom: getBottomShape(radius),\n    left: getLeftShape(radius),\n    right: getRightShape(radius),\n});\n\nconst shapes: TThemeShapes = {\n    rounded: getShapesForRadius(100),\n    xlg: getShapesForRadius(12),\n    lg: getShapesForRadius(8),\n    md: getShapesForRadius(6),\n    sm: getShapesForRadius(4),\n};\n\nconst getTopBorder = (width: number): React.CSSProperties => ({\n    borderTopWidth: width,\n    borderRightWidth: 0,\n    borderBottomWidth: width,\n    borderLeftWidth: 0,\n    borderBottomColor: 'transparent',\n});\nconst getBottomBorder = (width: number): React.CSSProperties => ({\n    borderTopWidth: width,\n    borderRightWidth: 0,\n    borderBottomWidth: width,\n    borderLeftWidth: 0,\n    borderTopColor: 'transparent',\n});\nconst getLeftBorder = (width: number): React.CSSProperties => ({\n    borderTopWidth: 0,\n    borderRightWidth: width,\n    borderBottomWidth: 0,\n    borderLeftWidth: width,\n    borderRightColor: 'transparent',\n});\nconst getRightBorder = (width: number): React.CSSProperties => ({\n    borderTopWidth: 0,\n    borderRightWidth: width,\n    borderBottomWidth: 0,\n    borderLeftWidth: width,\n    borderLeftColor: 'transparent',\n});\n\nconst getBordersForWidth = (width: number): TDirectionalStyle => ({\n    all: { borderWidth: width },\n    top: getTopBorder(width),\n    bottom: getBottomBorder(width),\n    left: getLeftBorder(width),\n    right: getRightBorder(width),\n});\n\nconst borders: TThemeBorders = {\n    xlg: getBordersForWidth(4),\n    lg: getBordersForWidth(3),\n    md: getBordersForWidth(2),\n    sm: getBordersForWidth(1),\n};\n\nconst defaultColorSet: TColorSet = {\n    text: 'text.primary',\n    textHover: 'text.primary',\n    textActive: 'text.primary',\n    bg: 'bg.primary',\n    bgHover: 'bg.primary',\n    bgActive: 'bg.primary',\n    border: 'transparent',\n    borderHover: 'transparent',\n    borderActive: 'transparent',\n};\n\nconst defaultColorSetGhost: TColorSet = {\n    text: 'text.primary',\n    textHover: 'text.primary',\n    textActive: 'text.primary',\n    bg: 'bg.primary',\n    bgHover: 'bg.primary',\n    bgActive: 'bg.primary',\n    border: 'text.primary',\n    borderHover: 'text.primary',\n    borderActive: 'text.primary',\n};\n\nconst defaultColorSetText: TColorSet = {\n    text: 'text.primary',\n    textHover: 'text.primary',\n    textActive: 'text.primary',\n    bg: 'transparent',\n    bgHover: 'transparent',\n    bgActive: 'transparent',\n    border: 'transparent',\n    borderHover: 'transparent',\n    borderActive: 'transparent',\n};\n\nconst colorSets: TPresetColors = {\n    none: {\n        text: 'transparent',\n        textHover: 'transparent',\n        textActive: 'transparent',\n        bg: 'transparent',\n        bgHover: 'transparent',\n        bgActive: 'transparent',\n        border: 'transparent',\n        borderHover: 'transparent',\n        borderActive: 'transparent',\n    },\n    primary: defaultColorSet,\n    primaryghost: defaultColorSetGhost,\n    primarytext: defaultColorSetText,\n    secondary: defaultColorSet,\n    secondaryghost: defaultColorSetGhost,\n    secondarytext: defaultColorSetText,\n    tertiary: defaultColorSet,\n    tertiaryghost: defaultColorSetGhost,\n    tertiarytext: defaultColorSetText,\n    accent: defaultColorSet,\n    accentghost: defaultColorSetGhost,\n    accenttext: defaultColorSetText,\n    success: defaultColorSet,\n    successghost: defaultColorSetGhost,\n    successtext: defaultColorSetText,\n    warning: defaultColorSet,\n    warningghost: defaultColorSetGhost,\n    warningtext: defaultColorSetText,\n    error: defaultColorSet,\n    errorghost: defaultColorSetGhost,\n    errortext: defaultColorSetText,\n    light: defaultColorSet,\n    lightghost: defaultColorSetGhost,\n    lighttext: defaultColorSetText,\n    grey: defaultColorSet,\n    greyghost: defaultColorSetGhost,\n    greytext: defaultColorSetText,\n    dark: defaultColorSet,\n    darkghost: defaultColorSetGhost,\n    darktext: defaultColorSetText,\n};\n\nexport const defaultTheme: TTheme = {\n    colors: {\n        spec: specColors,\n        text: {\n            primary: specColors.black,\n            primaryplus: specColors.black,\n            primaryminus: specColors.black,\n            primaryalt: specColors.black,\n            primaryaltplus: specColors.black,\n            primaryaltminus: specColors.black,\n            secondary: specColors.black,\n            secondaryplus: specColors.black,\n            secondaryminus: specColors.black,\n            tertiary: specColors.black,\n            tertiaryplus: specColors.black,\n            tertiaryminus: specColors.black,\n            accent: specColors.black,\n            accentplus: specColors.black,\n            accentminus: specColors.black,\n            success: specColors.black,\n            successplus: specColors.black,\n            successminus: specColors.black,\n            warning: specColors.black,\n            warningplus: specColors.black,\n            warningminus: specColors.black,\n            error: specColors.black,\n            errorplus: specColors.black,\n            errorminus: specColors.black,\n            contrast: specColors.black,\n        },\n        bg: {\n            primary: specColors.white,\n            primaryplus: specColors.white,\n            primaryminus: specColors.white,\n            primaryalt: specColors.white,\n            primaryaltplus: specColors.white,\n            primaryaltminus: specColors.white,\n            secondary: specColors.white,\n            secondaryplus: specColors.white,\n            secondaryminus: specColors.white,\n            tertiary: specColors.white,\n            tertiaryplus: specColors.white,\n            tertiaryminus: specColors.white,\n            accent: specColors.white,\n            accentplus: specColors.white,\n            accentminus: specColors.white,\n            success: specColors.white,\n            successplus: specColors.white,\n            successminus: specColors.white,\n            warning: specColors.white,\n            warningplus: specColors.white,\n            warningminus: specColors.white,\n            error: specColors.white,\n            errorplus: specColors.white,\n            errorminus: specColors.white,\n            contrast: specColors.white,\n        },\n    },\n    fonts,\n    sizes,\n    shadows,\n    shadowsText,\n    shapes,\n    borders,\n    colorSets,\n};\n","import { TCbVoid } from '../types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const emptyArray: ReadonlyArray<any> = [];\n\nexport const emptyObject: Readonly<Record<never, never>> = {};\n\nexport const emptyString: string = '';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const emptyFunction: TCbVoid = () => {};\n\nObject.freeze(emptyArray);\nObject.freeze(emptyObject);\n","import React from 'react';\n\nimport { TCbBool, TCbVoid } from '../types';\n\n\ntype TIn = Readonly<{\n    onChange?: TCbBool | null;\n    value?: boolean | null;\n    isDisabled?: boolean | null;\n}>;\n\ntype TOut = Readonly<{\n    switchValue: boolean;\n    toggle: TCbVoid;\n}>;\n\n\nexport const useSwitch: (params: TIn) => TOut = ({\n    onChange = null,\n    value = null,\n    isDisabled = null,\n}) => {\n    const [switchValue, setSwitchValue] = React.useState<boolean>(value || false);\n    \n    React.useEffect(\n        () => {\n            if (typeof value === 'boolean') {\n                setSwitchValue(value);\n            }\n        },\n        [value],\n    );\n\n    const toggle: TCbVoid = React.useCallback(\n        () => {\n            if (isDisabled) {\n                return;\n            }\n            const newSwitchValue = !switchValue;\n            setSwitchValue(newSwitchValue);\n            if (onChange) {\n                onChange(newSwitchValue);\n            }\n        },\n        [isDisabled, onChange, switchValue],\n    );\n    \n    return {\n        switchValue,\n        toggle,\n    };\n};\n\n","import React from 'react';\n\n\ntype TFn = (...args: ReadonlyArray<never>) => unknown;\n\n\n/**\n * Utilize `useCallbackRef` if calling a callback memoized with `React.useCallback` causes changes\n * of its own dependencies which may trigger unwanted renders, for example if the callback is used\n * in a render function.\n */\nexport const useCallbackRef = <T extends TFn>(fn: T): T => {\n    const selectRef = React.useRef<T>(fn);\n    \n    React.useEffect(\n        () => {\n            selectRef.current = fn;\n        },\n    );\n    \n    const selectRefMemoized = React.useMemo<T>(\n        () => ((...args) => selectRef.current(...args)) as T,\n        [],\n    );\n    \n    return selectRefMemoized as T;\n};\n","import React from 'react';\n\nimport { TCbVoid } from '../types';\n\n\ntype TOut = Readonly<[boolean, TCbVoid, TCbVoid, TCbVoid]>;\n\n\nexport const useFlag: (initialValue?: boolean) => TOut = (initialValue = false) => {\n    const [isActive, setIsActive] = React.useState(initialValue === true);\n    \n    const activate: TCbVoid = React.useCallback(\n        () => setIsActive(true),\n        [],\n    );\n    \n    const deactivate: TCbVoid = React.useCallback(\n        () => setIsActive(false),\n        [],\n    );\n    \n    const toggle: TCbVoid = React.useCallback(\n        () => setIsActive((current) => !current),\n        [],\n    );\n    \n    return [isActive, activate, deactivate, toggle];\n};\n","import React from 'react';\n\nimport { TCbString, TCbVoid, TOnPress } from '../types';\n\n\ntype TIn = Readonly<{\n    onChangeText: TCbString | null;\n    onBlur?: TCbVoid | null;\n    onFocus?: TCbVoid | null;\n}>;\n\ntype TOut = Readonly<{\n    isPassVisible: boolean;\n    isFocused: boolean;\n    togglePassVisible: TOnPress;\n    clear: TOnPress;\n    focus: TCbVoid;\n    unfocus: TCbVoid;\n}>;\n\n\nexport const useInput: (params: TIn) => TOut = ({\n    onChangeText,\n    onBlur = null,\n    onFocus = null,\n}) => {\n    const [isPassVisible, setIsPassVisible] = React.useState<boolean>(false);\n    const [isFocused, setIsFocused] = React.useState<boolean>(false);\n    \n    const togglePassVisible: TOnPress = React.useCallback(\n        (event) => {\n            event.preventDefault();\n            setIsPassVisible((isPassVisible) => !isPassVisible);\n        },\n        [],\n    );\n    \n    const clear: TOnPress = React.useCallback(\n        (event) => {\n            event.preventDefault();\n            if (onChangeText) {\n                onChangeText('');\n            }\n        },\n        [onChangeText],\n    );\n    \n    const focus: TCbVoid = React.useCallback(\n        () => {\n            setIsFocused(true);\n            if (onFocus) {\n                onFocus();\n            }\n        },\n        [onFocus],\n    );\n    \n    const unfocus: TCbVoid = React.useCallback(\n        () => {\n            setIsFocused(false);\n            if (onBlur) {\n                onBlur();\n            }\n        },\n        [onBlur],\n    );\n    \n    return {\n        isPassVisible,\n        isFocused,\n        togglePassVisible,\n        clear,\n        focus,\n        unfocus,\n    };\n};\n","import React from 'react';\n\nimport { TCbString, TCbVoid, TSetState } from '../types';\nimport { emptyString } from '../constants/empty';\n\n\ntype TMentionOpts = Readonly<{\n    setText: TSetState<string>; // returned by React.useState\n}>;\n\ntype TMentionOut = Readonly<{\n    mention: string;\n    setMention: TSetState<string>;\n    clearMention: TCbVoid;\n    applyMention: TCbString;\n}>;\n\n\nexport const useMention = ({\n    setText,\n}: TMentionOpts): TMentionOut => {\n    const [mention, setMention] = React.useState<string>(emptyString);\n    \n    // Using `mentionRef` prevents re-creation of `applyMention` on every edit\n    const mentionRef = React.useRef<string>(emptyString);\n    \n    const updateMention: TSetState<string> = React.useCallback(\n        (valueOrCb) => {\n            if (typeof valueOrCb === 'string') {\n                mentionRef.current = valueOrCb;\n                setMention(valueOrCb);\n            } else {\n                setMention((mention) => {\n                    const newValue = valueOrCb(mention);\n                    mentionRef.current = newValue;\n                    return newValue;\n                });\n            }\n        },\n        [],\n    );\n    \n    const clearMention: TCbVoid = React.useCallback(\n        () => {\n            mentionRef.current = emptyString;\n            setMention(emptyString);\n        },\n        [],\n    );\n    \n    const applyMention: TCbString = React.useCallback(\n        (value) => {\n            setText((text) => `${text.slice(0, -mentionRef.current.length)}${value} `);\n            mentionRef.current = emptyString;\n            setMention(emptyString);\n        },\n        [setText],\n    );\n    \n    return {\n        mention, setMention: updateMention, clearMention, applyMention,\n    };\n};\n","import React from 'react';\n\n\ntype TMounted = () => boolean;\n\ntype TUseMounted = () => TMounted;\n\n\nexport const useMounted: TUseMounted = () => {\n    const isMounted = React.useRef<boolean>(true);\n    React.useEffect(\n        () => {\n            isMounted.current = true;\n            return () => {\n                isMounted.current = false;\n            };\n        },\n        [],\n    );\n    const mounted: () => boolean = React.useCallback(\n        () => isMounted.current,\n        [],\n    );\n    return mounted;\n};\n","import React from 'react';\n\nimport { emptyArray } from '../constants/empty';\nimport {\n    TActiveButtons,\n    TButtonGroupBehavior,\n    TButtonGroupOnPress,\n} from '../types';\n\n\ntype TOpts = Readonly<{\n    active?: TActiveButtons | null;\n    behavior?: TButtonGroupBehavior | null;\n    onPress?: TButtonGroupOnPress | null;\n}>;\n\n\nexport const usePressButtons: (opts: TOpts) => (TButtonGroupOnPress | null) = ({\n    active = null,\n    behavior = null,\n    onPress = null,\n}) => {\n    const press: TButtonGroupOnPress = React.useCallback(\n        (e, buttons, name) => {\n            if (!buttons || !onPress) {\n                return;\n            }\n            if (behavior !== 'checkbox') {\n                if (typeof buttons === 'string' && buttons !== active) {\n                    onPress(e, buttons, name);\n                }\n                return;\n            }\n            \n            const activeArray = (typeof active === 'string' || !active) ? emptyArray : active;\n            \n            if (typeof buttons !== 'string') {\n                onPress(e, buttons, name);\n                return;\n            }\n            \n            const buttonsString: string = buttons;\n            \n            if (activeArray && activeArray.includes(buttonsString)) {\n                const nameAt = activeArray.findIndex((v) => buttonsString === v);\n                onPress(\n                    e,\n                    [\n                        ...activeArray.slice(0, nameAt),\n                        ...activeArray.slice(nameAt + 1),\n                    ],\n                    name,\n                );\n                return;\n            }\n            onPress(e, [...activeArray, buttonsString], name);\n        },\n        [onPress, active, behavior],\n    );\n    \n    return onPress ? press : null;\n};\n","import React from 'react';\nimport { TSelectOnChange } from '../types';\n\n\ntype TOut = Readonly<[string, TSelectOnChange]>;\n\n\nexport const useStringOption: (initialValue: string) => TOut = (initialValue) => {\n    const [value, setValue] = React.useState(initialValue);\n    \n    const setNotEmpty: TSelectOnChange = React.useCallback(\n        (newValue) => {\n            if (newValue !== null) {\n                setValue(newValue);\n            }\n        },\n        [],\n    );\n    \n    return [value, setNotEmpty];\n};\n\n","export const hashIntoColor = (str: string): string => {\n    let hash: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        // eslint-disable-next-line no-bitwise\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n        // eslint-disable-next-line no-bitwise\n        const value = (hash >> (i * 8)) & 0xFF;\n        color += value.toString(16).padStart(2, '0');\n    }\n    return color;\n};\n","import { TDict } from '../../types';\n\nconst defaultColor: string = 'magenta';\n\nexport const takeSpecColor = (\n    spec: TDict<string>,\n    name: string,\n): string => (spec[name] || defaultColor);\n","import React from 'react';\nimport {\n    TDirectionalStyle, TThemeBorders,\n} from '../../types';\n\n\nconst borderZero: React.CSSProperties = {\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderBottomWidth: 0,\n    borderLeftWidth: 0,\n};\n\nconst getAllBorder = (width: number): React.CSSProperties => ({\n    ...borderZero,\n    borderTopWidth: width,\n    borderRightWidth: width,\n    borderBottomWidth: width,\n    borderLeftWidth: width,\n});\n\nconst getTopBorder = (width: number): React.CSSProperties => ({\n    ...borderZero,\n    borderTopWidth: width,\n    borderBottomWidth: width,\n    borderBottomColor: 'transparent',\n});\n\nconst getBottomBorder = (width: number): React.CSSProperties => ({\n    ...borderZero,\n    borderTopWidth: width,\n    borderBottomWidth: width,\n    borderTopColor: 'transparent',\n});\n\nconst getLeftBorder = (width: number): React.CSSProperties => ({\n    ...borderZero,\n    borderLeftWidth: width,\n});\n\nconst getRightBorder = (width: number): React.CSSProperties => ({\n    ...borderZero,\n    borderRightWidth: width,\n});\n\nconst getBordersForWidth = (width: number): TDirectionalStyle => ({\n    all: getAllBorder(width),\n    top: getTopBorder(width),\n    bottom: getBottomBorder(width),\n    left: getLeftBorder(width),\n    right: getRightBorder(width),\n});\n\nexport const mapBorders = (sm: number, md: number, lg: number, xlg: number): TThemeBorders => ({\n    sm: getBordersForWidth(sm),\n    md: getBordersForWidth(md),\n    lg: getBordersForWidth(lg),\n    xlg: getBordersForWidth(xlg),\n});\n","import {\n    TColorSet, TDict,\n} from '../../types';\n\n\ntype TBgOnly = Readonly<{\n    bg: string;\n    bgHover: string;\n    bgActive: string;\n}>;\n\ntype TBorderOnly = Readonly<{\n    border: string;\n    borderHover: string;\n    borderActive: string;\n}>;\n\nconst transparentBg: TBgOnly = {\n    bg: 'transparent',\n    bgHover: 'transparent',\n    bgActive: 'transparent',\n};\n\nconst transparentBorder: TBorderOnly = {\n    border: 'transparent',\n    borderHover: 'transparent',\n    borderActive: 'transparent',\n};\n\nexport const createFlatColorset = (\n    text: string, textHover: string, textActive: string, bg: string, bgHover: string, bgActive: string,\n): TColorSet => ({\n    text,\n    textHover,\n    textActive,\n    bg,\n    bgHover,\n    bgActive,\n    ...transparentBorder,\n});\n\nexport const createGhostColorset = (text: string, textHover: string, textActive: string): TColorSet => ({\n    text,\n    textHover,\n    textActive,\n    ...transparentBg,\n    border: text,\n    borderHover: textHover,\n    borderActive: textActive,\n});\n\nexport const createTextColorset = (text: string, textHover: string, textActive: string): TColorSet => ({\n    text,\n    textHover,\n    textActive,\n    ...transparentBg,\n    ...transparentBorder,\n});\n\nexport const createStateColorsetTriplet = (name: string): TDict<TColorSet> => {\n    return {\n        [name]: createFlatColorset(\n            'spec.white',\n            'spec.white',\n            'spec.white',\n            `bg.${name}`,\n            `bg.${name}plus`,\n            `bg.${name}minus`,\n        ),\n        [`${name}ghost`]: {\n            text: `text.${name}`,\n            textHover: `text.${name}plus`,\n            textActive: `text.${name}minus`,\n            bg: 'bg.primaryalt',\n            bgHover: 'transparent',\n            bgActive: 'transparent',\n            border: `bg.${name}`,\n            borderHover: `bg.${name}plus`,\n            borderActive: `bg.${name}minus`,\n        },\n        [`${name}text`]: createTextColorset(\n            `text.${name}`,\n            `text.${name}plus`,\n            `text.${name}minus`,\n        ),\n    };\n};\n","import React from 'react';\nimport {\n    TThemeShadowsText, TThemeShadows,\n} from '../../types';\n\n\nexport const getElevationShadow = (elevation: number, shadowColor: string): React.CSSProperties => ({\n    elevation,\n    zIndex: elevation,\n    shadowColor,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.1 * elevation,\n    shadowRadius: 0.8 * elevation,\n} as React.CSSProperties);\n\nexport type TShadowColorsText = Readonly<{\n    sm: string,\n    md: string,\n}>;\n\nexport type TShadowColors = TShadowColorsText & Readonly<{\n    lg: string,\n}>;\n\nexport const mapShadows = (colors: TShadowColors, sm: number, md: number, lg: number): TThemeShadows => ({\n    none: null,\n    sm: getElevationShadow(sm, colors.sm),\n    md: getElevationShadow(md, colors.md),\n    lg: getElevationShadow(lg, colors.lg),\n});\n\nexport const mapShadowsText = (colors: TShadowColorsText, sm: number, md: number): TThemeShadowsText => ({\n    none: null,\n    sm: {\n        textShadowColor: colors.sm,\n        textShadowOffset: { width: 0, height: 0 },\n        textShadowRadius: sm,\n        padding: 0,\n    } as React.CSSProperties,\n    md: {\n        textShadowColor: colors.md,\n        textShadowOffset: { width: 0, height: 0 },\n        textShadowRadius: md,\n        padding: 0,\n    } as React.CSSProperties,\n});\n","import React from 'react';\nimport {\n    TThemeShapes, TDirectionalStyle,\n} from '../../types';\n\n\nconst getTopShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: radius,\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n});\n\nconst getBottomShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: radius,\n    borderBottomLeftRadius: radius,\n});\n\nconst getLeftShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: radius,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: radius,\n});\n\nconst getRightShape = (radius: number): React.CSSProperties => ({\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: radius,\n    borderBottomLeftRadius: 0,\n});\n\nconst getShapesForRadius = (radius: number): TDirectionalStyle => ({\n    all: { borderRadius: radius },\n    top: getTopShape(radius),\n    bottom: getBottomShape(radius),\n    left: getLeftShape(radius),\n    right: getRightShape(radius),\n});\n\nexport const mapShapes = (sm: number, md: number, lg: number, xlg: number): TThemeShapes => ({\n    rounded: getShapesForRadius(100),\n    sm: getShapesForRadius(sm),\n    md: getShapesForRadius(md),\n    lg: getShapesForRadius(lg),\n    xlg: getShapesForRadius(xlg),\n});\n","import { emptyFunction } from '../constants/empty';\n\n\ntype TLoggerMethod = (...args: ReadonlyArray<unknown>) => void;\n\ntype TLogger = Readonly<{\n    debug: TLoggerMethod;\n    info: TLoggerMethod;\n    warn: TLoggerMethod;\n    error: TLoggerMethod;\n}>;\n\n\nlet logger: TLogger = {\n    debug: emptyFunction,\n    info: emptyFunction,\n    warn: emptyFunction,\n    error: emptyFunction,\n};\n\nexport const getLogger = (): TLogger => logger;\n\nexport const setLogger = (newLogger: TLogger): void => { logger = newLogger; };\n","import createCachedSelector from 're-reselect';\n\nimport { TAnchorDesc, TAnchorDescList, TTransformText } from '../types';\nimport { getLogger } from './log-interface';\nimport { emptyArray } from '../constants/empty';\n\n\ntype TParseHrefCachedOpts = Readonly<{\n    anchor: string,\n    i: number,\n    transformText: TTransformText,\n}>;\n\nconst parseHrefCached = createCachedSelector<\n    TParseHrefCachedOpts,\n    string,\n    number,\n    TTransformText,\n    TAnchorDesc\n>(\n    ({ anchor }) => anchor,\n    ({ i }) => i,\n    ({ transformText }) => transformText,\n    (anchor, i, transformText) => {\n        const text = transformText(anchor);\n        const matched = anchor.match(/href=\"(.*?)\"/i);\n        const href = matched?.[1] || null;\n        const key = `${i}-href`;\n        return { text, href, key };\n    },\n)((input, i) => `getAnchors/parseHrefCached-${i}-${input}`);\n\n\nconst getAnchorLinksCached = createCachedSelector<\n    string,\n    TTransformText,\n    string,\n    TTransformText,\n    TAnchorDescList | null\n>(\n    (input) => input,\n    (_input, transformText) => transformText,\n    (input, transformText) => {\n        try {\n            // If no '<a 's around, return immediately\n            let at: number = input.indexOf('<a ');\n            if (at < 0) {\n                return null;\n            }\n            // If no real match, return immediately\n            at = input.search(/(?:\\s|\\n|^)<a\\s.*?<\\/a>/i);\n            if (at < 0) {\n                return null;\n            }\n            \n            let result: TAnchorDescList = emptyArray;\n            \n            let rest = input;\n            let i = 0;\n            \n            // Traverse the string in steps\n            do {\n                if (rest[at] !== '<') {\n                    at += 1; // skip 1 whitespace\n                }\n                result = [\n                    ...result,\n                    { text: transformText(rest.slice(0, at)), href: null, key: `${i}-text` },\n                ];\n                rest = rest.slice(at);\n                const matched = rest.match(/^<a\\s.*?<\\/a>/i);\n                const anchor = matched ? (matched[0] || '') : '';\n                result = [...result, parseHrefCached({ anchor, i, transformText })];\n                i++;\n                rest = rest.slice(anchor.length);\n                at = rest.search(/(?:\\s|\\n|^)<a\\s.*?<\\/a>/i);\n                if (at < 0 && rest.length) {\n                    result = [...result, { text: transformText(rest), href: null, key: `${i}-last-text` }];\n                }\n            } while (at > -1);\n            \n            return result;\n        } catch (error: unknown) {\n            getLogger().error('getAnchors.getAnchorLinksCached', error);\n            return null;\n        }\n    },\n)((input) => `getAnchors/getAnchorLinksCached-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n\n\nconst getPlainLinksCached = createCachedSelector<\n    string,\n    string,\n    TAnchorDescList | null\n>(\n    (input) => input,\n    (input) => {\n        try {\n            // If no real match, return immediately\n            let at = input.search(/(?:\\s|\\n|^)https?:\\/\\/\\w+/i);\n            if (at < 0) {\n                return null;\n            }\n            \n            let result: TAnchorDescList = emptyArray;\n            \n            let rest = input;\n            let i = 0;\n            \n            // Traverse the string in steps\n            do {\n                if (rest[at] !== 'h') {\n                    at += 1; // skip 1 whitespace\n                }\n                result = [...result, { text: rest.slice(0, at), href: null, key: `${i}-text` }];\n                rest = rest.slice(at);\n                const matched = rest.match(/^https?:\\/\\/\\w+[^\\s]*/i);\n                const href = (matched ? (matched[0] || '') : '').replace(/[,.;!:]$/, '');\n                result = [...result, { text: href, href, key: `${i}-href` }];\n                i++;\n                rest = rest.slice(href.length);\n                at = rest.search(/(?:\\s|\\n)https?:\\/\\/\\w+/i);\n                if (at < 0 && rest.length) {\n                    result = [...result, { text: rest, href: null, key: `${i}-last-text` }];\n                }\n            } while (at > -1);\n            \n            return result;\n        } catch (error: unknown) {\n            getLogger().error('getAnchors.getPlainLinksCached', error);\n            return null;\n        }\n    },\n)((input) => `getAnchors/getPlainLinksCached-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n\n\nconst mapHrefs = createCachedSelector<\n    TAnchorDescList,\n    TAnchorDescList,\n    TAnchorDescList\n>(\n    (hrefs) => hrefs,\n    (hrefs) => {\n        let result: TAnchorDescList = emptyArray;\n        \n        hrefs.forEach((item, i) => {\n            if (item.href) {\n                result = [...result, { ...item, key: `${i}-${item.key}` }];\n                return;\n            }\n            \n            const links = getPlainLinksCached(item.text);\n            if (!links) {\n                result = [...result, { ...item, key: `${i}-${item.key}` }];\n                return;\n            }\n            \n            result = [...result, ...links.map((link) => ({\n                ...link,\n                key: `${i}-${item.key}-${link.key}`,\n            }))];\n        });\n        \n        return result;\n    },\n)((hrefs) => `mapHrefs-${hrefs.map((href) => href.key).join(',')}`);\n\n\nexport const getAnchors = createCachedSelector<\n    string,\n    TTransformText,\n    string,\n    TTransformText,\n    TAnchorDescList | null,\n    TAnchorDescList | null\n>(\n    (input) => input,\n    (_input, transformText) => transformText,\n    getAnchorLinksCached,\n    (input, transformText, hrefs) => {\n        if (!hrefs) {\n            return getPlainLinksCached(transformText(input));\n        }\n        return mapHrefs(hrefs);\n    },\n)((input) => `getAnchors-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n","import { emptyArray } from '../constants/empty';\nimport { TUnknownObject } from '../types';\n\n\nexport const getConditionalItems = <T extends TUnknownObject>(\n    isAvailable: boolean,\n    item: T,\n): ReadonlyArray<T> => {\n    if (!isAvailable) {\n        return emptyArray as ReadonlyArray<T>;\n    }\n    return [item];\n};\n","import createCachedSelector from 're-reselect';\n\nimport { TStringList } from '../types';\n\n\nexport const getCssArgs = createCachedSelector<\n    string,\n    string,\n    TStringList | null\n>(\n    (value) => value,\n    (value) => (value ? value.split(/\\s+/) : null),\n)((value) => `getCssArgs-${value}`);\n","import createCachedSelector from 're-reselect';\n\nimport { TStringList } from '../types';\nimport { getCssArgs } from './get-css-args';\n\n\nconst getCssSidesN = createCachedSelector<\n    string,\n    TStringList,\n    string,\n    TStringList,\n    React.CSSProperties | null\n>(\n    (name) => name,\n    (_name, splitted) => splitted,\n    (name, splitted) => {\n        if (!splitted.length) {\n            return null;\n        }\n        \n        const mapped = splitted.map((v) => ((Number.isNaN(+v) ? v : +v) ?? 0));\n        \n        if (mapped.length === 1) {\n            return {\n                [`${name}Top`]: mapped[0] ?? 0,\n                [`${name}Right`]: mapped[0] ?? 0,\n                [`${name}Bottom`]: mapped[0] ?? 0,\n                [`${name}Left`]: mapped[0] ?? 0,\n            };\n        }\n        if (mapped.length === 2) {\n            return {\n                [`${name}Top`]: mapped[0] ?? 0,\n                [`${name}Right`]: mapped[1] ?? 0,\n                [`${name}Bottom`]: mapped[0] ?? 0,\n                [`${name}Left`]: mapped[1] ?? 0,\n            };\n        }\n        if (mapped.length === 3) {\n            return {\n                [`${name}Top`]: mapped[0] ?? 0,\n                [`${name}Right`]: mapped[1] ?? 0,\n                [`${name}Bottom`]: mapped[2] ?? 0,\n                [`${name}Left`]: mapped[1] ?? 0,\n            };\n        }\n\n        return {\n            [`${name}Top`]: mapped[0] ?? 0,\n            [`${name}Right`]: mapped[1] ?? 0,\n            [`${name}Bottom`]: mapped[2] ?? 0,\n            [`${name}Left`]: mapped[3] ?? 0,\n        };\n    },\n)((name, splitted) => `getCssSides/getCssSides-${splitted.length}-${name}-${splitted.join(',')}`);\n\n\nexport const getCssSides = createCachedSelector<\n    string,\n    string | number | null,\n    string,\n    string | number | null,\n    React.CSSProperties | null\n>(\n    (name) => name,\n    (_name, value) => value,\n    (name, value) => {\n        if (!name) {\n            return null;\n        }\n        if (typeof value === 'number') {\n            return { [name]: value };\n        }\n        if (!value) {\n            return null;\n        }\n        \n        const splitted: TStringList | null = getCssArgs(value);\n        \n        if (!splitted) {\n            return null;\n        }\n        \n        return getCssSidesN(name, splitted);\n    },\n)((name, value) => `getCssSides-${name}-${value}`);\n","export const getErrorMessage = (\n    error: unknown,\n    defaultMessage: string = 'Unknown error.',\n): string => {\n    return (error instanceof Error && error.message) || defaultMessage;\n};\n","import React from 'react';\nimport createCachedSelector from 're-reselect';\n\nimport { getCssSides } from './get-css-sides';\n\n\nexport const getMargins = createCachedSelector<\n    string | number | null,\n    string | number | null,\n    React.CSSProperties | null\n>(\n    (value) => value,\n    (value) => getCssSides('margin', value),\n)((value) => `getMargins-${value}`);\n","import createCachedSelector from 're-reselect';\nimport { emptyArray } from '../constants/empty';\n\nimport { TMentionDesc, TMentionDescList } from '../types';\nimport { getLogger } from './log-interface';\n\n\n// @{{123|abc def ghi}} @{{|abc def ghi}} @{{abc def ghi}}\n// (?: - means \"do not treat as a group\". Implying no sub-splits when using String.split\n// /@\\{\\{.*?\\}\\}/\nconst getSyntaxMentionsCached = createCachedSelector<\n    string,\n    string,\n    TMentionDescList | null\n>(\n    (input) => input,\n    (input) => {\n        try {\n            // If no '@'s around, return immediately\n            let at: number = input.indexOf('@');\n            if (at < 0) {\n                return null;\n            }\n            // If no real match, return immediately\n            at = input.search(/(?:\\s|\\n|^)@\\{\\{.*?\\}\\}/);\n            if (at < 0) {\n                return null;\n            }\n            \n            const result: TMentionDesc[] = [];\n            \n            let rest = input;\n            let i = 0;\n            \n            // Traverse the string in steps\n            do {\n                if (rest[at] !== '@') {\n                    at += 1; // skip 1 whitespace\n                }\n                result.push({ isMention: false, key: `${i}-text`, text: rest.slice(0, at) });\n                rest = rest.slice(at);\n                const matched = rest.match(/^@\\{\\{.*?\\}\\}/);\n                const mention = matched ? (matched[0] || '') : '';\n                const dividerIdx = mention.indexOf('||');\n                result.push({\n                    isMention: true,\n                    key: `${i}-mention`,\n                    text: `@${mention.slice(dividerIdx < 0 ? 3 : (dividerIdx + 2), -2)}`,\n                    id: dividerIdx < 0 ? '' : mention.slice(3, dividerIdx),\n                });\n                \n                i++;\n                rest = rest.slice(mention.length);\n                at = rest.search(/(?:\\s|\\n)@\\{\\{.*?\\}\\}/);\n                if (at < 0 && rest.length) {\n                    result.push({ isMention: false, key: 'last-text', text: rest });\n                }\n            } while (at > -1);\n            \n            return result;\n        } catch (error: unknown) {\n            getLogger().error('getSyntaxMentionsCached', error);\n            return null;\n        }\n    },\n)((input) => `getPlainMentionsCached-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n\n\n// @Abc, @Abc Def, @A, @A B, @A1 B2\n// not: @, @a, @1\n// (?: - means \"do not treat as a group\". Implying no sub-splits when using String.split\n// /@[A-Z]\\w*(?: [A-Z]\\w*)?/\nconst getPlainMentionsCached = createCachedSelector<\n    string,\n    string,\n    TMentionDescList | null\n>(\n    (input) => input,\n    (input) => {\n        try {\n            // If no '@'s around, return immediately\n            let at: number = input.indexOf('@');\n            if (at < 0) {\n                return null;\n            }\n            // If no real match, return immediately\n            at = input.search(/(?:\\s|\\n|^)@[A-Z]\\w*(?: [A-Z]\\w*)?/);\n            if (at < 0) {\n                return null;\n            }\n            \n            const result: TMentionDesc[] = [];\n            \n            let rest = input;\n            let i = 0;\n            \n            // Traverse the string in steps\n            do {\n                if (rest[at] !== '@') {\n                    at += 1; // skip 1 whitespace\n                }\n                result.push({ isMention: false, key: `${i}-text`, text: rest.slice(0, at) });\n                rest = rest.slice(at);\n                const matched = rest.match(/^@[A-Z]\\w*(?: [A-Z]\\w*)?/);\n                const mention = matched ? (matched[0] || '') : '';\n                result.push({ isMention: true, key: `${i}-mention`, text: mention });\n                i++;\n                rest = rest.slice(mention.length);\n                at = rest.search(/(?:\\s|\\n)@[A-Z]\\w*(?: [A-Z]\\w*)?/);\n                if (at < 0 && rest.length) {\n                    result.push({ isMention: false, key: 'last-text', text: rest });\n                }\n            } while (at > -1);\n            \n            return result;\n        } catch (error: unknown) {\n            getLogger().error('getPlainMentionsCached', error);\n            return null;\n        }\n    },\n)((input) => `getPlainMentionsCached-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n\n\nconst mapMentions = createCachedSelector<\n    TMentionDescList,\n    TMentionDescList,\n    TMentionDescList\n>(\n    (parts) => parts,\n    (parts) => {\n        let result: TMentionDescList = emptyArray;\n        \n        parts.forEach((item, i) => {\n            if (item.isMention) {\n                result = [...result, { ...item, key: `${i}-${item.key}` }];\n                return;\n            }\n            \n            const mentions = getPlainMentionsCached(item.text);\n            if (!mentions) {\n                result = [...result, { ...item, key: `${i}-${item.key}` }];\n                return;\n            }\n            \n            result = [...result, ...mentions.map((mention) => ({\n                ...mention,\n                key: `${i}-${item.key}-${mention.key}`,\n            }))];\n        });\n        \n        return result;\n    },\n)((parts) => `mapMentions-${parts.map((href) => href.key).join(',')}`);\n\n\nexport const getMentions = createCachedSelector<\n    string,\n    string,\n    TMentionDescList | null,\n    TMentionDescList | null\n>(\n    (input) => input,\n    (input) => getSyntaxMentionsCached(input),\n    (input, parts) => {\n        if (!parts) {\n            return getPlainMentionsCached(input);\n        }\n        return mapMentions(parts);\n    },\n)((input) => `getMentions-${input.length}-${input.slice(0, 5)}-${input.slice(-5)}`);\n","import React from 'react';\nimport createCachedSelector from 're-reselect';\n\nimport { getCssSides } from './get-css-sides';\n\n\nexport const getPaddings = createCachedSelector<\n    string | number | null,\n    string | number | null,\n    React.CSSProperties | null\n>(\n    (value) => value,\n    (value) => getCssSides('padding', value),\n)((value) => `getPaddings-${value}`);\n","import { emptyString } from '../constants/empty';\n\n\nconst lowerEndings = [\n    { reg: 's$', result: 'ses' },\n    { reg: 'x$', result: 'xes' },\n    { reg: 'sh$', result: 'shes' },\n    { reg: 'ch$', result: 'ches' },\n    { reg: 'io$', result: 'ios' },\n    { reg: 'oo$', result: 'oos' },\n    { reg: 'eo$', result: 'eos' },\n    { reg: 'o$', result: 'oes' },\n    { reg: 'uy$', result: 'uys' },\n    { reg: 'ey$', result: 'eys' },\n    { reg: 'oy$', result: 'oys' },\n    { reg: 'iy$', result: 'iys' },\n    { reg: 'ay$', result: 'ays' },\n    { reg: 'y$', result: 'ies' },\n    { reg: '(f|fe)$', result: 'ves' },\n];\n\nconst upperEndings = lowerEndings.map(({ reg, result }) => (\n    { reg: reg.toUpperCase(), result: result.toUpperCase() }\n));\n\nconst allEndings = [...lowerEndings, ...upperEndings];\n\nconst createReplacer = (reg: string, result: string) => (str: string) => str.replace(new RegExp(reg), result);\n\nconst replacers = allEndings.map(({ reg, result }) => createReplacer(reg, result));\n\n\nexport const getPluralForm = (\n    label: string,\n): string => {\n    if (!label) {\n        return emptyString;\n    }\n\n    let result = label;\n    const isLabelChanged = replacers.some((replacer) => {\n        const newStr = replacer(label);\n        if (label !== newStr) {\n            result = newStr;\n            return true;\n        }\n        return false;\n    });\n\n    if (!isLabelChanged) {\n        // if no lower-case charaters, then return label with 'S' ending,\n        // otherwise with 's' ending\n        return /^[^a-z]*$/.test(label)\n            ? `${label}S`\n            : `${label}s`;\n    }\n    return result;\n};\n","export const getRandomColor = (): string => {\n    return `#${(0x1000000 + Math.random() * 0xffffff).toString(16).slice(1, 7)}`;\n};\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import React from 'react';\nimport createCachedSelector from 're-reselect';\n\nimport {\n    TBorderGetter, TColorGetter, TColorSet, TFontGetter, TShadowGetter,\n    TShadowTextGetter, TShapeGetter, TSizeGetter, TTheme, TThemeField,\n    TThemeVariantGetter, TColorSetKey, TPresetColors, TColorSetGetter,\n} from '../types';\nimport { emptyString } from '../constants/empty';\n\n\ntype TNested = Readonly<{ [id: string]: TNested | unknown }>;\n\nconst getNested = (path: string, source: TNested): unknown => {\n    const pathSegments: ReadonlyArray<string> = path.split('.');\n    const count: number = pathSegments.length;\n    \n    if (!count) {\n        return undefined;\n    }\n    \n    if (count === 1) {\n        return source[path];\n    }\n    \n    if (count === 2) {\n        const segment0: string = pathSegments[0] ?? emptyString;\n        const nest1: TNested | unknown = source[segment0];\n        if (!nest1 || typeof nest1 !== 'object') {\n            return undefined;\n        }\n        \n        const segment1: string = pathSegments[1] ?? emptyString;\n        return (nest1 as TNested)[segment1];\n    }\n    \n    let value: TNested | unknown = source;\n    \n    for (let i = 0; i < pathSegments.length; i++) {\n        const segment: string = pathSegments[i] || '';\n        if (!value || typeof value !== 'object') {\n            return undefined;\n        }\n        value = (value as TNested)[segment];\n    }\n    \n    return value;\n};\n\nconst getThemeVariantGetter = createCachedSelector<\n    TTheme, TThemeField, TNested | null, TThemeVariantGetter\n>(\n    (theme, field) => (theme ? (theme[field] || null) : null),\n    (nest) => {\n        return (name: string | null) => {\n            if (!name || !nest) {\n                return null;\n            }\n            return getNested(name, nest) || null;\n        };\n    },\n)(() => 'get-theme-getter/getThemeVariantGetter');\n\nexport const getThemeShapeGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TShapeGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'shapes'),\n    (getShape) => {\n        return (name) => {\n            if (name === 'none' || !name) {\n                return null;\n            }\n            return getShape(name.includes('.') ? name : `${name}.all`) as (React.CSSProperties | null);\n        };\n    },\n)(() => 'get-theme-getter/getThemeShapeGetter');\n\nexport const getThemeBorderGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TBorderGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'borders'),\n    (getBorder) => {\n        return (name) => {\n            if (name === 'none' || !name) {\n                return null;\n            }\n            return getBorder(name.includes('.') ? name : `${name}.all`) as (React.CSSProperties | null);\n        };\n    },\n)(() => 'get-theme-getter/getThemeBorderGetter');\n\nexport const getThemeSizeGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TSizeGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'sizes'),\n    (getSize) => {\n        return (name, prefix) => {\n            if (name === 'auto' || !name || typeof name !== 'string') {\n                return null;\n            }\n            return getSize(name.includes('.') ? name : `${prefix}.${name}`) as (number | null);\n        };\n    },\n)(() => 'get-theme-getter/getThemeSizeGetter');\n\nexport const getThemeFontGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TFontGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'fonts'),\n    (getFont) => {\n        return (name) => getFont(name) as (React.CSSProperties | null);\n    },\n)(() => 'get-theme-getter/getThemeFontGetter');\n\nexport const getThemeShadowGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TShadowGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'shadows'),\n    (getShadow) => {\n        return (name) => getShadow(name) as (React.CSSProperties | null);\n    },\n)(() => 'get-theme-getter/getThemeShadowGetter');\n\nexport const getThemeShadowTextGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TShadowTextGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'shadowsText'),\n    (getShadowText) => {\n        return (name) => getShadowText(name) as (React.CSSProperties | null);\n    },\n)(() => 'get-theme-getter/getThemeShadowTextGetter');\n\nexport const getThemeColorGetter = createCachedSelector<\n    TTheme, TThemeVariantGetter, TColorGetter\n>(\n    (theme) => getThemeVariantGetter(theme, 'colors'),\n    (getColor) => {\n        return (name) => getColor(name) as (string | null);\n    },\n)(() => 'get-theme-getter/getThemeColorGetter');\n\ntype TColorKind = 'text' | 'bg' | 'border';\n\nexport const getThemeColorSetGetter = createCachedSelector<\n    TTheme, TColorKind, TColorGetter, TPresetColors, TColorKind, TColorSetGetter\n>(\n    (theme) => getThemeColorGetter(theme),\n    ({ colorSets }) => colorSets,\n    (_theme, kind) => kind,\n    (getColor, colorSets, kind) => {\n        const getter: TColorSetGetter = (state, colors): string => {\n            const finalColorset: TColorSet = (\n                typeof colors === 'string'\n                    ? colorSets[colors] || colorSets.primary\n                    : colors || colorSets.primary\n            );\n            \n            const key = (\n                (state === 'active' && `${kind}Active`) ||\n                (state === 'hover' && `${kind}Hover`) ||\n                kind\n            );\n            const color: string = finalColorset[key as TColorSetKey];\n            \n            return (getColor(color) as (string | null)) || color;\n        };\n        return getter;\n    },\n)(() => 'get-theme-getter/getThemeColorSetGetter');\n","import createCachedSelector from 're-reselect';\n\nimport { TUnknownObject } from '../types';\n\n\ntype TObjectifyFn<T> = (key: keyof T, value: T[keyof T]) => T;\n\nexport const createTypedObjectify = <T>(): TObjectifyFn<T> => {\n    return createCachedSelector<keyof T, T[keyof T], keyof T, T[keyof T], T>(\n        (key) => key,\n        (_key, value) => value,\n        (key, value) => ({ [key]: value } as unknown as T),\n    )((key, value) => `objectify-${key as string}-${value}`) as TObjectifyFn<T>;\n};\n\nexport const objectify = createTypedObjectify<TUnknownObject>();\n","export const removeItem = <T>(\n    array: ReadonlyArray<T>,\n    index: number,\n): ReadonlyArray<T> => {\n    if (index < 0 || index >= array.length) {\n        return array;\n    }\n    \n    return [...array.slice(0, index), ...array.slice(index + 1)];\n};\n\n","export const replaceItem = <T>(\n    array: ReadonlyArray<T>,\n    item: T,\n    index: number,\n): ReadonlyArray<T> => {\n    if (index < 0 || index >= array.length) {\n        return array;\n    }\n    \n    return [...array.slice(0, index), item, ...array.slice(index + 1)];\n};\n","import { TCb, TToastProps } from '../types';\nimport { getLogger } from './log-interface';\n\n\ntype TShowToastFn = TCb<TToastProps>;\n\nconst defaultShowToast: TShowToastFn = () => {\n    getLogger().warn('Toaster.showToastCached not assigned.');\n};\n\nlet showToastCached: TShowToastFn = defaultShowToast;\n\n\nexport const setShowToast = (newShowToast: TShowToastFn | null): void => {\n    showToastCached = newShowToast || defaultShowToast;\n};\n\n\nexport const showToast: TShowToastFn = (props: TToastProps) => showToastCached(props);\n\nexport const showToastError: TShowToastFn = (props: TToastProps) => showToastCached({\n    ...props,\n    lineColors: 'error',\n});\n\nexport const showToastSuccess: TShowToastFn = (props: TToastProps) => showToastCached({\n    ...props,\n    lineColors: 'success',\n});\n","export const toError = (\n    error: unknown,\n    defaultMessage: string = 'Unknown error.',\n): Error => {\n    return error instanceof Error ? error : new Error(defaultMessage);\n};\n\n","import { replaceItem } from './replace-item';\n\n\nexport const updateItem = <T extends Readonly<Record<string, unknown>>>(\n    array: ReadonlyArray<T>,\n    fields: Readonly<Partial<T>>,\n    index: number,\n): ReadonlyArray<T> => {\n    const item: T | null = index < 0 ? null : (array[index] ?? null);\n    if (!item) {\n        return array;\n    }\n    \n    return replaceItem(array, { ...item, ...fields }, index);\n};\n\n","export const validateEmail = (email: string): boolean => {\n    // eslint-disable-next-line max-len\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z0-9]{2,}))$/;\n    return re.test(email.toLowerCase());\n};\n\n","import React from 'react';\n\nimport { useFlag } from '../hooks/use-flag';\nimport { useMounted } from '../hooks/use-mounted';\nimport { TEmptyObject } from '../types';\n\n\nexport const withAsync = <T extends TEmptyObject>(\n    Component: React.ComponentType<T>,\n    Fallback: React.ComponentType<T> | null = null,\n    delay: number | null = null,\n): React.ComponentType<T> => {\n    const Async: React.FunctionComponent<T> = (props) => {\n        const [isVisible, show] = useFlag();\n        const mounted = useMounted();\n        \n        React.useEffect(\n            () => {\n                setTimeout(() => {\n                    if (mounted()) {\n                        show();\n                    }\n                }, delay ?? 20);\n            },\n            [show, mounted],\n        );\n        \n        if (!isVisible) {\n            if (!Fallback) {\n                return null;\n            }\n            return (\n                <Fallback {...props} />\n            );\n        }\n        \n        return (\n            <Component {...props} />\n        );\n    };\n\n    return Async;\n};\n","import React from 'react';\n\nimport { TEmptyObject } from '../types';\nimport { getErrorMessage } from './get-error-message';\nimport { getLogger } from './log-interface';\nimport { showToastError } from './toaster';\n\n\ntype TErrorState = Readonly<{ error: Error | null }>;\ntype TFallbackComponent = React.ComponentType<TErrorState>;\n\n\nexport const withBoundary = <T extends TEmptyObject>(\n    name: string,\n    Component: React.ComponentType<T>,\n    Fallback?: TFallbackComponent | null,\n): React.ComponentType<T> => {\n    return class ErrorBoundary extends React.Component<T, TErrorState> {\n        constructor(props: T) {\n            super(props);\n            this.state = { error: null };\n        }\n      \n        static getDerivedStateFromError(error: Error): TErrorState {\n            return { error };\n        }\n      \n        override componentDidCatch(error: Error): void {\n            getLogger().error(\n                'Boundary.Catch',\n                getErrorMessage(error),\n                name,\n            );\n            showToastError({\n                text: 'Unexpected UI error has occured. Some elements may not be displayed.',\n                duration: 0,\n            });\n        }\n        \n        override render(): React.ReactNode {\n            const { error } = this.state;\n            \n            if (error) {\n                if (!Fallback) {\n                    return null;\n                }\n                return (\n                    <Fallback error={error} />\n                );\n            }\n            \n            return (\n                <Component {...this.props} />\n            );\n        }\n    };\n};\n","import React, { forwardRef } from 'react';\n\nimport {\n    TEmptyObject, TIconEmbed, TSimpleCodeUiContext, TSimpleCodeUiIcons,\n} from '../types';\nimport { getLogger } from '../utils/log-interface';\n\n\ntype TFakeComponent = React.ForwardRefExoticComponent<TEmptyObject>;\n\nconst getFakeComponent: (name: string) => TFakeComponent = (name) => {\n    return forwardRef(() => {\n        React.useEffect(\n            () => {\n                getLogger().warn(`SimpleCodeUiProvider is missing \"${name}\".`);\n            },\n            [],\n        );\n        \n        return null;\n    });\n};\n\n\nconst getFakeIcon: (name: string) => TIconEmbed = (name) => ({\n    Component: getFakeComponent(`icons.${name}`),\n});\n\nconst emptyIcons: TSimpleCodeUiIcons = {\n    caretDown: getFakeIcon('caretDown'),\n    radioOn: getFakeIcon('radioOn'),\n    radioOff: getFakeIcon('radioOff'),\n    checkboxOn: getFakeIcon('checkboxOn'),\n    checkboxOff: getFakeIcon('checkboxOff'),\n    switchHandle: getFakeIcon('switchHandle'),\n};\n\nexport const defaultSimpleCodeUiContext: TSimpleCodeUiContext = {\n    Flex: getFakeComponent('Flex'),\n    TextFragment: getFakeComponent('TextFragment'),\n    ModalSelect: getFakeComponent('ModalSelect'),\n    Toast: getFakeComponent('Toast'),\n    InputZone: getFakeComponent('InputZone'),\n    LoadingIcon: getFakeComponent('LoadingIcon'),\n    Modal: getFakeComponent('Modal'),\n    icons: emptyIcons,\n    transformText: (text) => text,\n};\n\nexport const SimpleCodeUiContext = React.createContext<TSimpleCodeUiContext>({\n    ...defaultSimpleCodeUiContext,\n});\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsFlex,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst Flex_: React.ForwardRefRenderFunction<unknown, TPropsFlex> = (props, ref) => {\n    const { Flex }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <Flex ref={ref} {...props} />\n    );\n};\n\n\nexport const Flex = React.memo(React.forwardRef(Flex_));\n","import React from 'react';\n\nimport {\n    TStyle, TPropsAbs,\n} from '../types';\nimport { Flex } from '../Flex';\n\n\nconst Abs_: React.ForwardRefRenderFunction<unknown, TPropsAbs> = (\n    {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n        style,\n        ...propsFlex\n    }: TPropsAbs,\n    ref,\n) => {\n    const absStyle = React.useMemo<TStyle>(\n        () => [\n            {\n                position: 'absolute',\n                overflow: 'hidden',\n                left: left ?? undefined,\n                right: right ?? undefined,\n                top: top ?? undefined,\n                bottom: bottom ?? undefined,\n                width: width ?? undefined,\n                height: height ?? undefined,\n            },\n            style,\n        ],\n        [bottom, height, left, style, right, top, width],\n    );\n    \n    return (\n        <Flex\n            ref={ref}\n            {...propsFlex}\n            style={absStyle}\n        />\n    );\n};\n\nexport const Abs = React.memo(React.forwardRef(Abs_));\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsTextFragment,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst TextFragment_: React.ForwardRefRenderFunction<unknown, TPropsTextFragment> = (\n    props,\n    ref,\n) => {\n    const { TextFragment }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <TextFragment ref={ref} {...props} />\n    );\n};\n\n\nexport const TextFragment = React.memo(React.forwardRef(TextFragment_));\n","import React from 'react';\n\nimport { TextFragment } from '../TextFragment';\nimport { TPropsIconComponent, TStyle } from '../types';\n\n\nconst IconEmpty_: React.FunctionComponent<TPropsIconComponent> = ({\n    size = null,\n    color = null,\n    style = null,\n}: TPropsIconComponent) => {\n    const iconStyle = React.useMemo<TStyle>(\n        () => [\n            {\n                fontSize: size ?? undefined,\n                color: color ?? undefined,\n            },\n            style,\n        ],\n        [color, size, style],\n    );\n    \n    \n    return (\n        <TextFragment style={iconStyle}>\n            ★\n        </TextFragment>\n    );\n};\n\n\nexport const IconEmpty = React.memo(IconEmpty_);\n","import React from 'react';\n\nimport { defaultTheme } from '../constants/default-theme';\nimport { TThemeContext } from '../types';\nimport {\n    getThemeBorderGetter, getThemeColorGetter, getThemeFontGetter, getThemeShadowGetter,\n    getThemeShadowTextGetter, getThemeShapeGetter, getThemeSizeGetter, getThemeColorSetGetter,\n} from '../utils/get-theme-getter';\n\n\nconst defaultContext: TThemeContext = {\n    theme: defaultTheme,\n    getShape: getThemeShapeGetter(defaultTheme),\n    getBorder: getThemeBorderGetter(defaultTheme),\n    getSize: getThemeSizeGetter(defaultTheme),\n    getFont: getThemeFontGetter(defaultTheme),\n    getShadow: getThemeShadowGetter(defaultTheme),\n    getShadowText: getThemeShadowTextGetter(defaultTheme),\n    getColor: getThemeColorGetter(defaultTheme),\n    getColorBg: getThemeColorSetGetter(defaultTheme, 'bg'),\n    getColorText: getThemeColorSetGetter(defaultTheme, 'text'),\n    getColorBorder: getThemeColorSetGetter(defaultTheme, 'border'),\n};\n\nexport const ThemeContext = React.createContext<TThemeContext>(defaultContext);\n","import React from 'react';\n\nimport {\n    TThemeContext, TOnPress, TStyle, TPropsIcon, TAnyComponent,\n} from '../types';\nimport { IconEmpty } from '../IconEmpty';\nimport { ThemeContext } from '../ThemeContext';\nimport { Flex } from '../Flex';\n\n\nconst Icon_: React.ForwardRefRenderFunction<unknown, TPropsIcon> = (\n    {\n        name = null,\n        Component = null,\n        size = null,\n        sizeIcon = null,\n        rotation = null,\n        shadowIcon = null,\n        onPress = null,\n        align = null,\n        justify = null,\n        style = null,\n        ...propsFlex\n    }: TPropsIcon,\n    ref,\n) => {\n    const { state = null, colors = null } = propsFlex;\n    \n    const themeContext: TThemeContext = React.useContext(ThemeContext);\n    const { getShadowText, getColorText } = themeContext;\n    \n    const FinalIcon: TAnyComponent = Component || IconEmpty;\n    \n    const finalSize = size || 'md';\n    \n    const minSize: number | null = themeContext.getSize(finalSize, 'icon');\n    \n    const iconStyle = React.useMemo<TStyle>(\n        () => [\n            {\n                minHeight: minSize ?? undefined,\n                minWidth: minSize ?? undefined,\n                lineHeight: minSize ?? undefined,\n                textAlign: 'center',\n            },\n            // fixme\n            !!rotation && ({ transform: [{ rotate: `${rotation}deg` }] } as unknown as TStyle),\n            getShadowText(shadowIcon),\n        ],\n        [getShadowText, minSize, rotation, shadowIcon],\n    );\n    \n    const containerStyle = React.useMemo<TStyle>(\n        () => {\n            return [\n                {\n                    minHeight: minSize ?? undefined,\n                    minWidth: minSize ?? undefined,\n                },\n                style,\n            ];\n        },\n        [minSize, style],\n    );\n    \n    const press: TOnPress = React.useCallback(\n        (e) => {\n            if (onPress) {\n                onPress(e, name);\n            }\n        },\n        [onPress, name],\n    );\n    \n    return (\n        <Flex\n            ref={ref}\n            {...propsFlex}\n            style={containerStyle}\n            onPress={onPress && press}\n            align={align || 'center'}\n            justify={justify || 'center'}\n        >\n            <FinalIcon\n                name={name || 'star'}\n                size={sizeIcon ?? 18}\n                color={getColorText(state, colors) || undefined}\n                style={iconStyle}\n            />\n        </Flex>\n    );\n};\n\n\nexport const Icon = React.memo(React.forwardRef(Icon_));\n","import React from 'react';\n\nimport { TMentionContext } from '../types';\n\n\nexport const MentionContext = React.createContext<TMentionContext>({\n    name: null,\n    colors: null,\n    colorsSelf: null,\n});\n","import React from 'react';\n\nimport {\n    TColorSet, TMentionContext, TPropsTextFragment,\n} from '../types';\nimport { TextFragment } from '../TextFragment';\nimport { MentionContext } from '../MentionContext';\n\n\nconst colorsDefault: TColorSet = {\n    text: 'text.primary',\n    textHover: 'text.primaryplus',\n    textActive: 'text.primaryminus',\n    bg: 'bg.secondaryminus',\n    bgHover: 'bg.secondaryminus',\n    bgActive: 'bg.secondaryminus',\n    border: 'bg.secondaryminus',\n    borderHover: 'bg.secondaryminus',\n    borderActive: 'bg.secondaryminus',\n};\n\n\nconst Mention_: React.FunctionComponent<TPropsTextFragment> = ({\n    font = null,\n    size = null,\n    shadow = null,\n    shadowBox = null,\n    shape = null,\n    padding = null,\n    ...propsTextFragment\n}: TPropsTextFragment) => {\n    const { name, colors, colorsSelf }: TMentionContext = React.useContext(MentionContext);\n    \n    if (!propsTextFragment.children) {\n        return null;\n    }\n    \n    const isSelf = (propsTextFragment.children === `@${name}`);\n    \n    return (\n        <TextFragment\n            {...propsTextFragment}\n            font={font || 'semi'}\n            size={size || 'auto'}\n            shadow={shadow || 'none'}\n            shadowBox={shadowBox || 'none'}\n            colors={(isSelf ? colorsSelf : colors) || colorsDefault}\n            shape={shape || 'sm'}\n            padding={padding ?? '0 5'}\n            isOpaque\n        />\n    );\n};\n\n\nexport const Mention = React.memo(Mention_);\n","import React from 'react';\n\nimport { Mention } from '../Mention';\nimport {\n    TMentionDescList, TPropsMentions,\n} from '../types';\nimport { getMentions } from '../utils/get-mentions';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst Mentions_: React.FunctionComponent<TPropsMentions> = ({\n    text,\n    hasMentions = null,\n    isDecorated = null,\n}: TPropsMentions) => {\n    const { transformText } = React.useContext(SimpleCodeUiContext);\n    \n    const unescaped = React.useMemo<string>(\n        () => {\n            if (isDecorated) {\n                return transformText(text);\n            }\n            return text;\n        },\n        [transformText, text, isDecorated],\n    );\n    \n    const mentions = React.useMemo<TMentionDescList | null>(\n        () => (hasMentions ? getMentions(unescaped) : null),\n        [hasMentions, unescaped],\n    );\n    \n    if (!mentions) {\n        return (\n            // eslint-disable-next-line react/jsx-no-useless-fragment\n            <>{unescaped}</>\n        );\n    }\n    \n    return (\n        <>\n            {mentions.map((mention) => {\n                return mention.isMention ? (\n                    <Mention key={mention.key}>{mention.text}</Mention>\n                ) : (\n                    mention.text\n                );\n            })}\n        </>\n    );\n};\n\n\nexport const Mentions = React.memo(Mentions_);\n","import React from 'react';\n\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\nimport { TextFragment } from '../TextFragment';\nimport { TAnchorDescList } from '../types';\nimport { getAnchors } from '../utils/get-anchors';\nimport { Mentions } from './Mentions';\n\n\nexport type TProps = Readonly<{\n    children?: React.ReactNode | null;\n    hasMentions?: boolean | null;\n    isDecorated?: boolean | null;\n}>;\n\n\nconst Highlighted_: React.FunctionComponent<TProps> = ({\n    children = null,\n    hasMentions = null,\n    isDecorated = null,\n}: TProps) => {\n    const { transformText } = React.useContext(SimpleCodeUiContext);\n    \n    const descs: TAnchorDescList | null = React.useMemo(\n        () => {\n            if (!isDecorated || typeof children !== 'string') {\n                return null;\n            }\n            return getAnchors(children, transformText);\n        },\n        [children, isDecorated, transformText],\n    );\n    \n    if (!children) {\n        return null;\n    }\n    \n    if (typeof children !== 'string') {\n        return (\n            // eslint-disable-next-line react/jsx-no-useless-fragment\n            <>{children}</>\n        );\n    }\n    \n    if (!descs) {\n        return (\n            <Mentions\n                text={children}\n                hasMentions={hasMentions}\n                isDecorated={isDecorated}\n            />\n        );\n    }\n    \n    return (\n        <>\n            {descs.map((desc) => {\n                return desc.href ? (\n                    <TextFragment\n                        key={desc.key}\n                        href={desc.href}\n                        colors={desc.href ? 'accenttext' : null}\n                        state=\"hover\"\n                        size=\"auto\"\n                        shadow=\"none\"\n                        shape=\"none\"\n                    >\n                        <Mentions\n                            text={desc.text}\n                            hasMentions={hasMentions}\n                        />\n                    </TextFragment>\n                ) : (\n                    <React.Fragment key={desc.key}>\n                        <Mentions\n                            text={desc.text}\n                            hasMentions={hasMentions}\n                        />\n                    </React.Fragment>\n                );\n            })}\n        </>\n    );\n};\n\n\nexport const Highlighted = React.memo(Highlighted_);\n","import React from 'react';\n\nimport { TextFragment } from '../TextFragment';\nimport { TPropsTxt } from '../types';\nimport { Highlighted } from './Highlighted';\n\n\nconst Txt_: React.ForwardRefRenderFunction<unknown, TPropsTxt> = (\n    {\n        hasMentions = null,\n        isDecorated = null,\n        children = null,\n        ...propsTextFragment\n    }: TPropsTxt,\n    ref,\n) => (\n    <TextFragment ref={ref} {...propsTextFragment}>\n        {!children ? null : (\n            <Highlighted hasMentions={hasMentions} isDecorated={isDecorated}>\n                {children}\n            </Highlighted>\n        )}\n    </TextFragment>\n);\n\n\nexport const Txt = React.memo(React.forwardRef(Txt_));\n","export const getButtonPadding = (\n    isColumn: boolean,\n    isAuto: boolean,\n    padding: string | number | null,\n): string | number | null => {\n    if (!padding || isColumn || isAuto) {\n        return padding;\n    }\n    if (typeof padding === 'number') {\n        return `0 ${padding}`;\n    }\n    if (typeof padding === 'string') {\n        return padding;\n    }\n    return null;\n};\n","\nimport createCachedSelector from 're-reselect';\n\nimport type {\n    TSpecSize, TIconEmbedList, TColorsProp, TActivityState, TStyle,\n} from '../../types';\n\n\ntype TIconOpts = Readonly<{\n    icons: TIconEmbedList,\n    colors: TColorsProp | null,\n    size: TSpecSize,\n    state: TActivityState,\n}>;\n\nconst styleNoBg: TStyle = {\n    backgroundColor: null as unknown as undefined,\n    borderColor: null as unknown as undefined,\n};\n\nconst getIconPropsInner = (\n    icons: TIconEmbedList,\n    colors: TColorsProp | null,\n    size: TSpecSize,\n    state: TActivityState,\n): TIconEmbedList => [0, 1].map((i) => {\n    if (!icons) {\n        return null;\n    }\n    \n    const icon = icons[i];\n    if (!icon) {\n        return null;\n    }\n    \n    return {\n        ...icon,\n        colors: icon.colors || colors,\n        size: icon.size || size,\n        style: [styleNoBg, icon.style],\n        state,\n    };\n});\n\nexport const getIconProps = createCachedSelector<\n    TIconOpts,\n    TIconEmbedList,\n    TColorsProp | null,\n    TSpecSize,\n    TActivityState,\n    TIconEmbedList\n>(\n    ({ icons }) => icons,\n    ({ colors }) => colors,\n    ({ size }) => size,\n    ({ state }) => state,\n    getIconPropsInner,\n)(\n    ({\n        icons, colors, size, state,\n    }) => [\n        'getIconProps',\n        icons.length,\n        typeof colors === 'string' ? colors : '[custom]',\n        size,\n        state ?? 'none',\n    ].join('-'),\n);\n","import React from 'react';\nimport createCachedSelector from 're-reselect';\n\nimport type {\n    TThemeContext,\n    TStyle,\n    TSpecSize,\n} from '../../types';\nimport { ThemeContext } from '../../ThemeContext';\n\n\ntype TStyleOpts = Readonly<{\n    size: TSpecSize,\n    style: TStyle | null,\n}>;\n\ntype TButtonSizeStyle = Readonly<{\n    minWidth: number | undefined;\n    height: number | undefined;\n    minHeight: number | undefined;\n}>;\n\nconst getSizeStyle = createCachedSelector<\n    number | null,\n    number | null,\n    TButtonSizeStyle\n>(\n    (size) => size,\n    (size) => ({\n        minWidth: size ?? undefined,\n        height: size ?? undefined,\n        minHeight: size ?? undefined,\n    }),\n)((size) => `spec/Button/getSizeStyle-${size ?? 'none'}`);\n\nconst getButtonStyle = createCachedSelector<\n    React.CSSProperties,\n    TStyle | null,\n    React.CSSProperties,\n    TStyle | null,\n    TStyle\n>(\n    (sizeStyle) => sizeStyle,\n    (_sizeStyle, customStyle) => customStyle,\n    (sizeStyle, customStyle) => {\n        if (!customStyle) {\n            return sizeStyle;\n        }\n        return [sizeStyle, customStyle];\n    },\n)(\n    (sizeStyle, customStyle) => [\n        'spec/Button/getButtonStyle',\n        sizeStyle.height || 'auto',\n        customStyle ? 'custom' : 'default',\n    ].join('-'),\n);\n\n\nexport const useButtonStyle: (opts: TStyleOpts) => TStyle = ({\n    size,\n    style,\n}) => {\n    const themeContext: TThemeContext = React.useContext(ThemeContext);\n    \n    const buttonStyle = React.useMemo<TStyle>(\n        () => {\n            const sizeValue = themeContext.getSize(size, 'button');\n            return getButtonStyle(getSizeStyle(sizeValue), style);\n        },\n        [themeContext, size, style],\n    );\n    \n    return buttonStyle;\n};\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsModalSelect,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst ModalSelect_: React.ForwardRefRenderFunction<unknown, TPropsModalSelect> = (props, ref) => {\n    const { ModalSelect }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <ModalSelect ref={ref} {...props} />\n    );\n};\n\n\nexport const ModalSelect = React.memo(React.forwardRef(ModalSelect_));\n","import React from 'react';\n\nimport type {\n    TOnPress, TPropsButton, TSpecSize, TIconEmbedList, TActivityState, TButtonGroupOnPress,\n} from '../types';\nimport { Icon } from '../Icon';\nimport { useFlag } from '../hooks/use-flag';\nimport { Flex } from '../Flex';\nimport { Txt } from '../Txt';\nimport { getButtonPadding } from './utils/get-button-padding';\nimport { getIconProps } from './utils/get-icon-props';\nimport { emptyArray } from '../constants/empty';\nimport { useButtonStyle } from './hooks/use-button-style';\nimport { ModalSelect } from '../ModalSelect';\n\n\nconst Button_: React.ForwardRefRenderFunction<unknown, TPropsButton> = (\n    {\n        name = null,\n        icons = null,\n        iconsActive = null,\n        label = null,\n        labelActive,\n        lines = null,\n        font = null,\n        fontActive = null,\n        children = null,\n        style = null,\n        colors = null,\n        colorsActive = null,\n        onPress = null,\n        isActive = null,\n        select = null,\n        hasMentions = null,\n        isDecorated = null,\n        direction = null,\n        justify = null,\n        align = null,\n        shape = null,\n        shadow,\n        size,\n        sizeText,\n        sizeIcons,\n        padding,\n        flexText,\n        alignText,\n        shadowText,\n        ...propsFlex\n    }: TPropsButton,\n    ref,\n) => {\n    const [isHover, pressIn, pressOut] = useFlag();\n    const [isSelectVisible, , hideSelect, toggleSelect] = useFlag();\n    \n    const sizeFinal: TSpecSize = size || 'md';\n    const sizeIconsFinal: TSpecSize = sizeIcons || sizeFinal;\n    const isColumn = direction === 'column';\n    const isAuto = sizeFinal === 'auto';\n    const state: TActivityState = ((isHover && 'hover') || (isActive && 'active') || null);\n    const isSelectable = select !== null;\n    \n    const iconsFinal = isActive ? (iconsActive || icons) : icons;\n    const labelFinal = isActive ? (labelActive || label) : label;\n    const fontFinal = isActive ? (fontActive || font) : font;\n    const colorsFinal = isActive ? (colorsActive || colors) : colors;\n    \n    const paddingFinal: string | number | null = React.useMemo(\n        () => getButtonPadding(isColumn, isAuto, padding ?? null),\n        [isAuto, isColumn, padding],\n    );\n    \n    const press: TOnPress = React.useCallback(\n        (e) => {\n            onPress?.(e, name);\n            if (isSelectable) {\n                toggleSelect();\n            }\n        },\n        [onPress, isSelectable, name, toggleSelect],\n    );\n    \n    const pressSelect: TButtonGroupOnPress = React.useCallback(\n        (e, name) => {\n            if (typeof name === 'string' || !name) {\n                onPress?.(e, name ?? null);\n            }\n            hideSelect();\n        },\n        [hideSelect, onPress],\n    );\n    \n    const [iconLeftProps = null, iconRightProps = null] = React.useMemo<TIconEmbedList>(\n        () => {\n            if (!iconsFinal || !iconsFinal.length) {\n                return emptyArray;\n            }\n            return getIconProps({\n                icons: iconsFinal,\n                colors: colorsFinal,\n                size: sizeIconsFinal,\n                state: state === 'active' && colorsActive ? null : state,\n            });\n        },\n        [iconsFinal, colorsFinal, sizeIconsFinal, state, colorsActive],\n    );\n    \n    const containerStyle = useButtonStyle({ size: sizeFinal, style });\n    \n    const flexRef = React.useRef<React.ReactElement | null>(null);\n    React.useEffect(\n        () => {\n            if (!ref) {\n                return;\n            }\n            \n            if (typeof ref === 'function') {\n                ref(flexRef.current);\n                return;\n            }\n            \n            // eslint-disable-next-line no-param-reassign\n            ref.current = flexRef.current;\n        },\n        [ref],\n    );\n    \n    return (\n        <Flex\n            ref={flexRef}\n            {...propsFlex}\n            direction={direction || 'row'}\n            justify={justify || 'center'}\n            align={align || 'center'}\n            shape={shape || 'rounded'}\n            shadow={shadow || 'sm'}\n            style={containerStyle}\n            colors={colorsFinal || 'primary'}\n            onPress={(onPress || isSelectable) ? press : null}\n            onPressIn={onPress && pressIn}\n            onPressOut={onPress && pressOut}\n            padding={paddingFinal}\n            state={state === 'active' && colorsActive ? null : state}\n        >\n            {iconLeftProps && (\n                <Icon {...iconLeftProps} />\n            )}\n            {!!labelFinal && (\n                <Txt\n                    hasMentions={hasMentions}\n                    isDecorated={isDecorated}\n                    align={alignText || 'center'}\n                    flex={flexText}\n                    lines={lines ?? 1}\n                    font={fontFinal || 'semi'}\n                    size={sizeText || sizeFinal}\n                    shadow={shadowText}\n                    colors={colorsFinal}\n                    state={state}\n                >\n                    {labelFinal}\n                </Txt>\n            )}\n            {children}\n            {iconRightProps && (\n                <Icon {...iconRightProps} />\n            )}\n            {select && (\n                <ModalSelect\n                    {...select}\n                    isHidden={!isSelectVisible}\n                    onClose={hideSelect}\n                    onPress={pressSelect}\n                    targetRef={flexRef}\n                />\n            )}\n        </Flex>\n    );\n};\n\nexport const Button = React.memo(React.forwardRef(Button_));\n","\nimport React from 'react';\n\nimport { Button } from '../Button';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\nimport {\n    TColorsProp,\n    TIconEmbed,\n    TIconEmbedList,\n    TPropsCheckbox,\n    TSpecSize,\n} from '../types';\n\n\nconst buttonPaddings: Readonly<Record<TSpecSize, string>> = {\n    xxsm: '5 0',\n    xsm: '8 0',\n    sm: '10 0',\n    md: '12 0',\n    lg: '14 0',\n    xlg: '16 0',\n    xxlg: '19 0',\n    auto: '12 0',\n};\n\nconst iconSizes: Readonly<Record<TSpecSize, number>> = {\n    xxsm: 18,\n    xsm: 18,\n    sm: 20,\n    md: 22,\n    lg: 24,\n    xlg: 26,\n    xxlg: 26,\n    auto: 26,\n};\n\nconst iconMargins: Readonly<Record<TSpecSize, string>> = {\n    xxsm: '0 6 0 6',\n    xsm: '0 6 0 6',\n    sm: '0 6 0 6',\n    md: '0 6 0 6',\n    lg: '1 6 0 6',\n    xlg: '1 6 0 6',\n    xxlg: '1 6 0 6',\n    auto: '0 6 0 6',\n};\n\ntype TIconPair = Readonly<{\n    inactive: TIconEmbedList;\n    active: TIconEmbedList;\n}>;\n\nconst getIconPair = (\n    iconOn: TIconEmbed,\n    iconOff: TIconEmbed,\n    size: TSpecSize,\n): TIconPair => {\n    return {\n        active: [{\n            ...iconOn,\n            sizeIcon: iconSizes[size],\n            margin: iconMargins[size],\n        }],\n        inactive: [{\n            ...iconOff,\n            sizeIcon: iconSizes[size],\n            margin: iconMargins[size],\n        }],\n    };\n};\n\nconst getColoredIcon = (initial: TIconEmbedList, colors: TColorsProp | null = null): TIconEmbedList => {\n    if (!colors) {\n        return initial;\n    }\n    return [{ ...initial[0], colors }];\n};\n\ntype TSizedIcons = Readonly<Record<TSpecSize, TIconPair>>;\n\n\nconst ButtonCheck_: React.ForwardRefRenderFunction<unknown, TPropsCheckbox> = (\n    {\n        icons = null,\n        iconsActive = null,\n        colors = null,\n        alignText = null,\n        shape = null,\n        shadow = null,\n        justify = null,\n        align = null,\n        direction = null,\n        lines = null,\n        padding = null,\n        sizeText = null,\n        size = null,\n        colorsIcon = null,\n        ...propsButton\n    }: TPropsCheckbox,\n    ref,\n) => {\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const sizeTextFinal = sizeText || size || 'md';\n    \n    \n    const sizedIcons = React.useMemo<TSizedIcons>(\n        () => ({\n            xxsm: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'xxsm'),\n            xsm: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'xsm'),\n            sm: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'sm'),\n            md: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'md'),\n            lg: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'lg'),\n            xlg: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'xlg'),\n            xxlg: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'xxlg'),\n            auto: getIconPair(simpleCodeIcons.checkboxOn, simpleCodeIcons.checkboxOff, 'auto'),\n        }),\n        [simpleCodeIcons],\n    );\n\n    \n    const checkActive: TIconEmbedList = React.useMemo(\n        () => getColoredIcon(sizedIcons[sizeTextFinal].active, colorsIcon),\n        [colorsIcon, sizeTextFinal, sizedIcons],\n    );\n    \n    const checkEmpty: TIconEmbedList = React.useMemo(\n        () => getColoredIcon(sizedIcons[sizeTextFinal].inactive, colorsIcon),\n        [colorsIcon, sizeTextFinal, sizedIcons],\n    );\n    \n    return (\n        <Button\n            ref={ref}\n            {...propsButton}\n            icons={icons || checkEmpty}\n            iconsActive={iconsActive || checkActive}\n            colors={colors || 'primarytext'}\n            alignText={alignText || 'left'}\n            shape={shape || 'none'}\n            shadow={shadow || 'none'}\n            justify={justify || 'flex-start'}\n            align={align || 'flex-start'}\n            direction={direction || 'row'}\n            lines={lines ?? 0}\n            padding={padding ?? buttonPaddings[sizeTextFinal]}\n            sizeText={sizeTextFinal}\n            size=\"auto\" // must be auto for correct icon display\n        />\n    );\n};\n\nexport const ButtonCheck = React.memo(React.forwardRef(ButtonCheck_));\n","import React from 'react';\n\nimport { emptyArray } from '../../constants/empty';\nimport { useMounted } from '../../hooks/use-mounted';\nimport { TPropsListProgressive } from '../types';\n\n\nconst defaultCountBatch = 2;\nconst defaultInterval = 50;\n\n\n// eslint-disable-next-line react/function-component-definition\nexport const useProgressiveArray = <T, >({\n    items = null,\n    onRenderItem = null,\n    countInitial = null,\n    countBatch = null,\n    interval = null,\n}: TPropsListProgressive<T>): ReadonlyArray<React.ReactElement | null> => {\n    const mounted = useMounted();\n    const [countCurrent, setCountCurrent] = React.useState<number>(\n        (countInitial ?? 0) < 0 ? (items?.length ?? 0) : (countInitial ?? 0),\n    );\n    \n    const countTotal: number = items?.length ?? 0;\n    const itemsFinal: ReadonlyArray<T> = items || emptyArray;\n    \n    const itemsCurrent = React.useMemo<ReadonlyArray<T>>(\n        () => {\n            return itemsFinal.slice(0, countCurrent);\n        },\n        [countCurrent, itemsFinal],\n    );\n    \n    const timeoutRef = React.useRef<null | number>(null);\n    \n    React.useEffect(\n        () => {\n            if (countTotal < countCurrent) {\n                setCountCurrent(countTotal);\n            }\n        },\n        [countCurrent, countTotal],\n    );\n    \n    React.useEffect(\n        () => {\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = null;\n            }\n            \n            if (countCurrent >= countTotal) {\n                return;\n            }\n            \n            if (countCurrent < countTotal) {\n                const countNext = Math.min(\n                    countCurrent + (countBatch || defaultCountBatch),\n                    countTotal,\n                );\n                setTimeout(() => {\n                    if (mounted()) {\n                        setCountCurrent(countNext);\n                    }\n                }, interval || defaultInterval);\n            }\n        },\n        [countBatch, countCurrent, countTotal, interval, mounted],\n    );\n    \n    return itemsCurrent.map((item, index) => (\n        item ? (onRenderItem?.(item, index) || null) : null\n    ));\n};\n","import React from 'react';\n\nimport { useProgressiveArray } from './hooks/use-progressive-array';\nimport { TPropsListProgressive } from './types';\n\n\n// eslint-disable-next-line react/function-component-definition\nconst ListProgressive_ = <T, >(\n    props: TPropsListProgressive<T>,\n): React.ReactElement => {\n    const elements = useProgressiveArray(props);\n    \n    return (\n        // eslint-disable-next-line react/jsx-no-useless-fragment\n        <>{elements}</>\n    );\n};\n\nexport const ListProgressive = React.memo(ListProgressive_) as typeof ListProgressive_;\n","import React from 'react';\n\nimport type {\n    TPropsButtonGroup, TButtonOnPress, TButtonPropsList, TPropsButton, TShapeName, TPropsFlex,\n} from '../types';\nimport { usePressButtons } from '../hooks/use-press-buttons';\nimport { Flex } from '../Flex';\nimport { emptyArray } from '../constants/empty';\nimport { ListProgressive } from '../ListProgressive';\nimport { Button } from '../Button';\n\n\nconst getShape = (\n    isColumn: boolean,\n    isFirst: boolean,\n    isLast: boolean,\n    shape: TShapeName | null,\n): TShapeName | null => {\n    if (shape === null || shape === 'none') {\n        return 'none';\n    }\n    const [baseShape] = shape.split('.') as ReadonlyArray<TShapeName>;\n    if (isFirst) {\n        if (isColumn) {\n            return `${baseShape}.top` as TShapeName;\n        }\n        return `${baseShape}.left` as TShapeName;\n    }\n    if (isLast) {\n        if (isColumn) {\n            return `${baseShape}.bottom` as TShapeName;\n        }\n        return `${baseShape}.right` as TShapeName;\n    }\n    return 'none';\n};\n\nconst getButtonShape = (\n    isColumn: boolean,\n    buttonShape: TShapeName | null | undefined,\n    shape: TShapeName | null | undefined,\n    i: number,\n    lastI: number,\n): TShapeName | null => {\n    if (buttonShape) {\n        return buttonShape;\n    }\n    const finalShape = shape || 'none';\n    return lastI > 0 ? getShape(isColumn, i === 0, i === lastI, finalShape) : finalShape;\n};\n\nconst renderItem: (button: TPropsButton) => React.ReactElement = (button) => (\n    <Button\n        key={button.name}\n        {...button}\n    />\n);\n\n\nconst ButtonGroup_: React.ForwardRefRenderFunction<unknown, TPropsButtonGroup> = (props, ref) => {\n    const press = usePressButtons(props);\n    \n    const {\n        name = null,\n        countInitial = null,\n        countBatch = null,\n        interval = null,\n        onRenderItem = null,\n        colors = null,\n        shape = null,\n        colorsActive = null,\n        direction = null,\n        justify = null,\n        align = null,\n        icons = null,\n        iconsActive = null,\n        border = null,\n        flexText = null,\n        lines = null,\n        shadowText = null,\n        shadow = null,\n        buttons = null,\n        size = null,\n        font = null,\n        fontActive = null,\n        onPress = null,\n        hasMentions = null,\n        isDecorated = null,\n        sizeText = null,\n        isDisabled = null,\n        spacing = null,\n        active = null,\n        ...propsFlex\n    }: TPropsButtonGroup = props;\n    \n    const { flex = null }: TPropsFlex = propsFlex;\n    \n    const pressNamed: TButtonOnPress = React.useCallback(\n        (e, buttonName) => {\n            if (press) {\n                press(e, buttonName, name);\n            }\n        },\n        [name, press],\n    );\n    \n    const isColumn = direction === 'column' || direction === 'column-reverse';\n    \n    const modifiedButtons = React.useMemo<TButtonPropsList>(\n        () => {\n            if (!buttons || !buttons.length) {\n                return emptyArray;\n            }\n            const lastI = buttons.length - 1;\n            const finalSpacing = spacing ?? 0;\n            const flexBase = isColumn ? null : flex;\n            return buttons.map((button, i) => {\n                if (!button) {\n                    return null;\n                }\n                const isActive = (\n                    active && (\n                        (typeof active === 'string' && active === button.name) ||\n                        (typeof active !== 'string' && active.includes(button.name))\n                    )\n                ) || false;\n                \n                const mergedButton: TPropsButton = {\n                    ...button,\n                    isActive: colorsActive ? false : isActive,\n                    icons: (isActive && iconsActive) || button.icons || icons,\n                    size: button.size || size,\n                    sizeText: button.sizeText || sizeText,\n                    colors: (\n                        (isActive && (button.colorsActive || colorsActive)) ||\n                        button.colors ||\n                        colors\n                    ),\n                    isDisabled: button.isDisabled || isDisabled,\n                    shape: getButtonShape(isColumn, button.shape, shape, i, lastI),\n                    flex: button.flex ?? flexBase,\n                    flexText: button.flexText ?? flexText,\n                    font: (isActive && fontActive) || button.font || font,\n                    border: button.border || border,\n                    shadow: button.shadow || shadow || 'sm',\n                    shadowText: button.shadowText || shadowText,\n                    lines: button.lines || lines,\n                    style: finalSpacing === 0 ? button.style : [\n                        (\n                            isColumn\n                                ? { marginTop: i !== 0 ? finalSpacing : 0 }\n                                : { marginLeft: i !== 0 ? finalSpacing : 0 }\n                        ),\n                        button.style,\n                    ],\n                    onPress: onPress ? pressNamed : null,\n                    hasMentions: button.hasMentions || hasMentions,\n                    isDecorated: button.isDecorated || isDecorated,\n                };\n                return mergedButton;\n            });\n        },\n        [\n            buttons, spacing, active, isColumn, flex, colorsActive,\n            iconsActive, icons, size, sizeText, colors, isDisabled, shape, flexText,\n            fontActive, font, border, shadow, shadowText, lines, onPress, pressNamed,\n            hasMentions, isDecorated,\n        ],\n    );\n    \n    return (\n        <Flex\n            ref={ref}\n            {...propsFlex}\n            direction={direction || 'row'}\n            justify={justify || 'space-between'}\n            align={align || (isColumn ? 'stretch' : 'center')}\n        >\n            <ListProgressive\n                items={modifiedButtons}\n                onRenderItem={onRenderItem || renderItem}\n                countInitial={countInitial}\n                countBatch={countBatch}\n                interval={interval}\n            />\n        </Flex>\n    );\n};\n\nexport const ButtonGroup = React.memo(React.forwardRef(ButtonGroup_));\n","\nimport React from 'react';\n\nimport { Button } from '../Button';\nimport {\n    TIconEmbedList,\n    TPropsCheckbox,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst ButtonRadio_: React.ForwardRefRenderFunction<unknown, TPropsCheckbox> = (\n    {\n        icons = null,\n        iconsActive = null,\n        colors = null,\n        shadow = null,\n        shape = null,\n        justify = null,\n        ...propsButton\n    }: TPropsCheckbox,\n    ref,\n) => {\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const radioActive = React.useMemo<TIconEmbedList>(\n        () => [simpleCodeIcons.radioOn],\n        [simpleCodeIcons.radioOn],\n    );\n    \n    const radioEmpty: TIconEmbedList = React.useMemo(\n        () => [simpleCodeIcons.radioOff],\n        [simpleCodeIcons.radioOff],\n    );\n    \n    return (\n        <Button\n            ref={ref}\n            {...propsButton}\n            icons={icons || radioEmpty}\n            colors={colors || 'primarytext'}\n            shadow={shadow || 'none'}\n            shape={shape || 'none'}\n            justify={justify || 'flex-start'}\n            iconsActive={iconsActive || radioActive}\n        />\n    );\n};\n\nexport const ButtonRadio = React.memo(React.forwardRef(ButtonRadio_));\n","import React from 'react';\n\nimport type {\n    TIconEmbedList,\n    TPropsButton,\n    TPropsButtonGroup,\n} from '../types';\nimport { ButtonRadio } from '../ButtonRadio';\nimport { ButtonGroup } from '../ButtonGroup';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst renderItem: (button: TPropsButton) => React.ReactElement = (button) => (\n    <ButtonRadio\n        key={button.name}\n        {...button}\n    />\n);\n\n\nconst ButtonGroupRadio_: React.ForwardRefRenderFunction<\nunknown, TPropsButtonGroup\n> = (\n    {\n        onRenderItem = null,\n        behavior = null,\n        direction = null,\n        shadow = null,\n        align = null,\n        iconsActive = null,\n        ...propsButtonGroup\n    }: TPropsButtonGroup,\n    ref,\n) => {\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const radioActive = React.useMemo<TIconEmbedList>(\n        () => [simpleCodeIcons.radioOn],\n        [simpleCodeIcons.radioOn],\n    );\n    \n    return (\n        <ButtonGroup\n            ref={ref}\n            {...propsButtonGroup}\n            behavior={behavior || 'radio'}\n            direction={direction || 'column'}\n            shadow={shadow || 'none'}\n            align={align || 'flex-start'}\n            onRenderItem={onRenderItem || renderItem}\n            iconsActive={iconsActive || radioActive}\n        />\n    );\n};\n\nexport const ButtonGroupRadio = React.memo(React.forwardRef(ButtonGroupRadio_));\n","\nimport React from 'react';\n\nimport { useSwitch } from '../hooks/use-switch';\nimport {\n    TButtonOnPress,\n    TPropsCheckbox,\n} from '../types';\nimport { ButtonCheck } from '../ButtonCheck';\n\n\nconst Checkbox_: React.ForwardRefRenderFunction<unknown, TPropsCheckbox> = (\n    {\n        onPress = null,\n        onChange = null,\n        value = null,\n        ...propsButtonCheck\n    }: TPropsCheckbox,\n    ref,\n) => {\n    const { switchValue, toggle } = useSwitch({ onChange, value, isDisabled: false });\n    \n    const press: TButtonOnPress = React.useCallback(\n        (_e, name) => {\n            toggle();\n            if (onPress) {\n                onPress(_e, name);\n            }\n        },\n        [onPress, toggle],\n    );\n    \n    return (\n        <ButtonCheck\n            ref={ref}\n            {...propsButtonCheck}\n            isActive={switchValue}\n            onPress={press}\n        />\n    );\n};\n\nexport const Checkbox = React.memo(React.forwardRef(Checkbox_));\n","import React from 'react';\n\nimport type {\n    TStyle,\n    TPropsDivider,\n    TThemeContext,\n} from '../types';\nimport { Flex } from '../Flex';\nimport { ThemeContext } from '../ThemeContext';\n\n\nconst Divider_: React.ForwardRefRenderFunction<unknown, TPropsDivider> = (\n    {\n        size = null,\n        style = null,\n        shape = null,\n        shadow = null,\n        colors = null,\n        ...propsFlex\n    }: TPropsDivider,\n    ref,\n) => {\n    const finalSize = size || 'md';\n    \n    const themeContext: TThemeContext = React.useContext(ThemeContext);\n    \n    const containerStyle = React.useMemo<TStyle>(\n        () => {\n            const size = themeContext.getSize(finalSize, 'divider');\n            return [\n                {\n                    minWidth: size,\n                    height: size,\n                } as React.CSSProperties,\n                style,\n            ];\n        },\n        [themeContext, finalSize, style],\n    );\n    \n    return (\n        <Flex\n            ref={ref}\n            {...propsFlex}\n            style={containerStyle}\n            colors={colors || 'secondary'}\n            shape={shape || 'none'}\n            shadow={shadow || 'none'}\n        />\n    );\n};\n\nexport const Divider = React.memo(React.forwardRef(Divider_));\n","import React from 'react';\n\nimport { ButtonGroup } from '../ButtonGroup';\nimport type {\n    TButtonGroupEmbed, TSpecSize, TThemeContext, TStyle, TPropsListItem, TButtonGroupOnPress,\n} from '../types';\nimport { Button } from '../Button';\nimport { ThemeContext } from '../ThemeContext';\nimport { Flex } from '../Flex';\n\n\nconst buttonSizes: Readonly<Record<TSpecSize, TSpecSize>> = {\n    xxsm: 'xsm',\n    xsm: 'sm',\n    sm: 'sm',\n    md: 'sm',\n    lg: 'md',\n    xlg: 'lg',\n    xxlg: 'lg',\n    auto: 'md',\n};\n\n\nconst ListItem_: React.ForwardRefRenderFunction<unknown, TPropsListItem> = (\n    {\n        name = null,\n        size = null,\n        sizeText = null,\n        sizeIcons = null,\n        alignText = null,\n        icons = null,\n        children = null,\n        style = null,\n        font = null,\n        shape = null,\n        shadow = null,\n        colors = null,\n        onPressButton = null,\n        isDisabled = false,\n        buttonGroup = null,\n        direction = null,\n        justify = null,\n        ...propsButton\n    }: TPropsListItem,\n    ref,\n) => {\n    const pressButton: TButtonGroupOnPress = React.useCallback(\n        (e, buttonName) => {\n            if (onPressButton) {\n                e.stopPropagation();\n                onPressButton(e, buttonName, name);\n            }\n        },\n        [name, onPressButton],\n    );\n    \n    const sizeFinal = size || 'md';\n    \n    const buttonGroupProps: TButtonGroupEmbed | null = React.useMemo(\n        () => (\n            (buttonGroup && {\n                ...buttonGroup,\n                isDisabled: isDisabled || buttonGroup.isDisabled,\n                size: buttonGroup.size || buttonSizes[sizeFinal],\n                colors: buttonGroup.colors || 'primarytext',\n                shadow: buttonGroup.shadow || 'none',\n                flex: buttonGroup.flex ?? -1,\n            }) ||\n            null\n        ),\n        [buttonGroup, isDisabled, sizeFinal],\n    );\n    \n    const themeContext: TThemeContext = React.useContext(ThemeContext);\n    \n    const containerStyle: TStyle = React.useMemo(\n        () => {\n            const size: number | null = themeContext.getSize(sizeFinal, 'item');\n            return [\n                { minWidth: size || undefined, height: size || undefined },\n                style,\n            ];\n        },\n        [themeContext, sizeFinal, style],\n    );\n    \n    const finalShadow = shadow || 'none';\n    \n    return (\n        <Button\n            ref={ref}\n            {...propsButton}\n            name={name}\n            size=\"auto\"\n            sizeText={sizeText || sizeFinal}\n            sizeIcons={sizeIcons || sizeFinal}\n            icons={icons}\n            style={containerStyle}\n            font={font || 'regular'}\n            shape={shape || 'none'}\n            shadow={finalShadow}\n            colors={colors || (finalShadow === 'none' ? 'primarytext' : 'primary')}\n            direction={direction || (sizeFinal === 'auto' ? 'column' : 'row')}\n            justify={justify || 'space-between'}\n            alignText={alignText || 'left'}\n        >\n            {children || <Flex colors=\"none\" />}\n            {buttonGroupProps && (\n                <Flex colors=\"none\">\n                    <ButtonGroup {...buttonGroupProps} onPress={pressButton} />\n                </Flex>\n            )}\n        </Button>\n    );\n};\n\n\nexport const ListItem = React.memo(React.forwardRef(ListItem_));\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsInputZone,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst InputZone_: React.ForwardRefRenderFunction<unknown, TPropsInputZone> = (props, ref) => {\n    const { InputZone }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <InputZone ref={ref} {...props} />\n    );\n};\n\n\nexport const InputZone = React.memo(React.forwardRef(InputZone_));\n","import React from 'react';\n\nimport type {\n    TThemeContext, TPropsInput, TButtonOnPress, TStyle, TMentionDesc, TFocusControl, TCbString,\n} from '../types';\nimport { ThemeContext } from '../ThemeContext';\nimport { ListItem } from '../ListItem';\nimport { Flex } from '../Flex';\nimport { InputZone } from '../InputZone';\nimport { getMentions } from '../utils/get-mentions';\nimport { emptyObject } from '../constants/empty';\n\n\nconst inputWrapper: TStyle = {\n    height: '100%',\n    overflow: 'hidden',\n};\n\n\ntype TMentionDict = Readonly<Record<string, TMentionDesc>>;\n\n\nconst Input_: React.ForwardRefRenderFunction<unknown, TPropsInput> = (\n    {\n        alignText = null,\n        flexText = null,\n        font = null,\n        shadowText = null,\n        state = null,\n        hasMentions = null,\n        isBlurOnSubmit = null,\n        isMulti = null,\n        isAuto = null,\n        placeholder = null,\n        onChange = null,\n        onMention = null,\n        max = null,\n        value = null,\n        colorsPlaceholder = null,\n        keyboardType = null,\n        secureTextEntry = null,\n        onBlur = null,\n        onFocus = null,\n        children = null,\n        autoCapitalize = null,\n        autoCorrect = null,\n        initialLines = null,\n        isReadonly = null,\n        onPress = null,\n        onSubmit = null,\n        returnKeyType = null,\n        direction = null,\n        sizeText = null,\n        custom = null,\n        ...propsListItem\n    }: TPropsInput,\n    ref,\n) => {\n    const {\n        size = null,\n        colors = null,\n        isDisabled = null,\n        testId = null,\n    } = propsListItem;\n    const [focuser, setFocuser] = React.useState<TFocusControl | null>(null);\n    const [valueOwn, setValueOwn] = React.useState<string>('');\n    const mentionDictRef = React.useRef<TMentionDict>(emptyObject);\n    \n    React.useEffect(\n        () => {\n            setValueOwn(value || '');\n        },\n        [value],\n    );\n    \n    React.useEffect(\n        () => {\n            if (!hasMentions) {\n                return;\n            }\n            const newMentions = getMentions(valueOwn || '');\n            if (newMentions) {\n                const newDict: TMentionDict = newMentions.reduce(\n                    (accum, next) => {\n                        if (!next.isMention) {\n                            return accum;\n                        }\n                        return { ...accum, [next.text]: next };\n                    },\n                    emptyObject as TMentionDict,\n                );\n                mentionDictRef.current = newDict;\n            } else {\n                mentionDictRef.current = emptyObject;\n            }\n        },\n        [hasMentions, valueOwn],\n    );\n    \n    const pressItem: TButtonOnPress = React.useCallback(\n        (event, name) => {\n            if (!isReadonly && focuser) {\n                focuser.focus();\n            }\n            if (onPress) {\n                onPress(event, name);\n            }\n        },\n        [isReadonly, onPress, focuser],\n    );\n    \n    const finalSize = size || 'md';\n    const finalSizeText = sizeText || 'md';\n    \n    const themeContext: TThemeContext = React.useContext(ThemeContext);\n    \n    const placeholderTextColor = themeContext.getColorText(state, colorsPlaceholder || 'greytext');\n    \n    const minHeight = React.useMemo<number>(\n        () => {\n            const lineHeight = themeContext.getSize(finalSizeText, 'line');\n            let minHeight = (lineHeight || 0);\n            if (initialLines && initialLines > 1) {\n                minHeight *= initialLines;\n            }\n            return minHeight;\n        },\n        [finalSizeText, initialLines, themeContext],\n    );\n    \n    const wrapperStyle = React.useMemo<TStyle>(\n        () => {\n            return [\n                inputWrapper,\n                { minHeight },\n            ];\n        },\n        [minHeight],\n    );\n    \n    const themeStyle = React.useMemo<TStyle>(\n        () => {\n            return [\n                ({\n                    ...themeContext.getFont(font || 'regular'),\n                    fontSize: themeContext.getSize(finalSizeText, 'font'),\n                    minHeight,\n                    color: themeContext.getColorText(state, colors || 'primary'),\n                    opacity: isReadonly ? 0.75 : 1,\n                } as TStyle),\n                themeContext.getShadowText(shadowText),\n            ];\n        },\n        [themeContext, font, finalSizeText, minHeight, state, colors, isReadonly, shadowText],\n    );\n    \n    const updateText: TCbString = React.useCallback(\n        (text) => {\n            // If mentions ignored, just pass the text through\n            if (!hasMentions) {\n                if (onChange) {\n                    onChange(text);\n                }\n                return;\n            }\n            \n            // First, replace the known mentions\n            let replaced = text;\n            Object.values(mentionDictRef.current).forEach((mention) => {\n                replaced = replaced.replaceAll(\n                    mention.text,\n                    `@{{${mention.id || ''}||${mention.text.slice(1)}}}`,\n                );\n            });\n            \n            // See if the new mention is being added at the end\n            // NOTE: only trailing mentions are supported\n            const matched = replaced.match(/(?:\\s|^)@[a-z]*$/i);\n            const pendingMention = matched ? (matched[0] || '') : '';\n            \n            if (onMention) {\n                onMention(pendingMention ? pendingMention.replace(/^\\s/, '') : '');\n            }\n            \n            // Take a substring without the trailing mention (if there is any)\n            const noPending = pendingMention ? replaced.slice(0, -pendingMention.length) : replaced;\n            \n            // Pull the mentions once again: both replaced and any highlighted\n            const mentions = getMentions(noPending);\n            \n            // For all mentions, we either have an ID, or disband the mention\n            if (mentions) {\n                replaced = mentions.map((mention) => {\n                    if (mention.isMention) {\n                        return mention.id\n                            ? `@{{${mention.id}||${mention.text.slice(1)}}}`\n                            : mention.text.slice(1);\n                    }\n                    return mention.text;\n                }).join('');\n                replaced = `${replaced}${pendingMention}`;\n            }\n            \n            setValueOwn(replaced);\n            if (onChange) {\n                onChange(replaced);\n            }\n        },\n        [hasMentions, onChange, onMention],\n    );\n    \n    return (\n        <ListItem\n            ref={ref}\n            {...propsListItem}\n            onPress={pressItem}\n            direction={direction || 'row'}\n        >\n            <Flex\n                flex={direction === 'column' ? 0 : 1}\n                colors=\"none\"\n                style={wrapperStyle}\n            >\n                <InputZone\n                    sizeText={sizeText}\n                    alignText={alignText}\n                    flexText={flexText}\n                    font={font}\n                    shadowText={shadowText}\n                    colors={colors}\n                    isDisabled={isDisabled}\n                    hasMentions={hasMentions}\n                    isBlurOnSubmit={isBlurOnSubmit}\n                    isMulti={isMulti}\n                    isAuto={isAuto}\n                    placeholder={placeholder}\n                    max={max}\n                    keyboardType={keyboardType}\n                    secureTextEntry={secureTextEntry}\n                    onBlur={onBlur}\n                    onFocus={onFocus}\n                    autoCapitalize={autoCapitalize}\n                    autoCorrect={autoCorrect}\n                    isReadonly={isReadonly}\n                    onSubmit={onSubmit}\n                    returnKeyType={returnKeyType}\n                    value={valueOwn}\n                    style={themeStyle}\n                    size={finalSize}\n                    placeholderTextColor={placeholderTextColor}\n                    onChange={updateText}\n                    onFocuser={setFocuser}\n                    custom={custom}\n                    testId={testId && `InputZone:${testId}`}\n                />\n            </Flex>\n            {children}\n        </ListItem>\n    );\n};\n\n\nexport const Input = React.memo(React.forwardRef(Input_));\n","import React from 'react';\n\nimport { TKeyboardContext } from '../types';\n\n\nexport const KeyboardContext = React.createContext<TKeyboardContext>({\n    height: 0,\n});\n","import React from 'react';\n\nimport type {\n    TListItemEmbed, TListItemEmbedList, TRenderItemFn,\n} from '../types';\nimport { ListItem } from '../ListItem';\nimport { Divider } from '../Divider';\nimport { usePressButtons } from '../hooks/use-press-buttons';\nimport { emptyArray } from '../constants/empty';\nimport { ListProgressive } from '../ListProgressive';\nimport { Flex } from '../Flex';\nimport { TPropsList } from './types';\n\n\nconst List_: React.ForwardRefRenderFunction<unknown, TPropsList> = (\n    {\n        // unused\n        name = null,\n        label = null,\n        labelActive = null,\n        isActive = null,\n        select = null,\n        href = null,\n        \n        // Button\n        size = null,\n        sizeText = null,\n        sizeIcons = null,\n        alignText = null,\n        hasMentions = null,\n        isDecorated = null,\n        icons = null,\n        iconsActive = null,\n        shadowText = null,\n        flexText = null,\n        lines = null,\n        font = null,\n        fontActive = null,\n        colorsActive = null,\n        \n        // ListItem\n        onPress = null,\n        onPressButton = null,\n        buttonGroup = null,\n        \n        // List\n        active = null,\n        behavior = null,\n        divider = null,\n        \n        // ListProgressive\n        items = null,\n        onRenderItem = null,\n        countInitial = null,\n        countBatch = null,\n        interval = null,\n        \n        // Per-item flex\n        border = null,\n        shadow = null,\n        shape = null,\n        \n        direction = null,\n        justify = null,\n        align = null,\n        colors = null,\n        isDisabled = null,\n        \n        ...propsFlex\n    }: TPropsList,\n    ref,\n) => {\n    const press = usePressButtons({ onPress, active, behavior });\n    const pressButton = usePressButtons({ onPress: onPressButton, active, behavior });\n    \n    const modifiedItems = React.useMemo<TListItemEmbedList>(\n        () => {\n            if (!items) {\n                return emptyArray;\n            }\n            return items.map((item) => {\n                if (!item) {\n                    return null;\n                }\n                const isActive = (\n                    active && (\n                        (typeof active === 'string' && active === item.name) ||\n                        (typeof active !== 'string' && active.includes(item.name ?? null))\n                    )\n                ) || false;\n                const mergedItem: TListItemEmbed = {\n                    ...item,\n                    isActive: colorsActive ? false : isActive,\n                    icons: item.icons || icons,\n                    iconsActive: item.iconsActive || iconsActive,\n                    size: item.size || size,\n                    sizeText: item.sizeText || sizeText,\n                    sizeIcons: item.sizeIcons || sizeIcons,\n                    colors: (isActive && colorsActive) || item.colors || colors,\n                    isDisabled: item.isDisabled || isDisabled,\n                    flex: item.flex,\n                    flexText: item.flexText ?? flexText,\n                    font: (isActive && fontActive) || item.font || font,\n                    border: item.border || border,\n                    shadow: item.shadow || shadow,\n                    shape: item.shape || shape,\n                    alignText: item.alignText || alignText,\n                    buttonGroup: item.buttonGroup || buttonGroup,\n                    shadowText: item.shadowText || shadowText,\n                    lines: item.lines || lines,\n                    hasMentions: item.hasMentions || hasMentions,\n                    isDecorated: item.isDecorated || isDecorated,\n                };\n                return mergedItem;\n            });\n        },\n        [\n            items, active, colorsActive, icons, iconsActive, size, sizeText, sizeIcons,\n            colors, isDisabled, flexText, fontActive, font, border, shadow, shape,\n            alignText, buttonGroup, shadowText, lines, hasMentions, isDecorated,\n        ],\n    );\n    \n    const defaultRenderItem: TRenderItemFn<TListItemEmbed> = React.useCallback(\n        (item, i) => {\n            return (\n                <React.Fragment key={item.name}>\n                    <ListItem\n                        key={item.name}\n                        {...item}\n                        onPress={onPress && press}\n                        onPressButton={onPressButton && pressButton}\n                    />\n                    {!!divider && i < modifiedItems.length - 1 && (\n                        <Divider {...divider} />\n                    )}\n                </React.Fragment>\n            );\n        },\n        [divider, modifiedItems.length, onPress, onPressButton, press, pressButton],\n    );\n    \n    return (\n        <Flex\n            ref={ref}\n            {...propsFlex}\n            direction={direction || 'column'}\n            justify={justify || 'flex-start'}\n            align={align || (direction === 'row' ? 'center' : 'stretch')}\n        >\n            <ListProgressive\n                items={modifiedItems}\n                countBatch={countBatch}\n                interval={interval}\n                onRenderItem={onRenderItem || defaultRenderItem}\n                countInitial={countInitial ?? -1}\n            />\n        </Flex>\n    );\n};\n\nexport const List = React.memo(React.forwardRef(List_));\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsIconComponent,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst LoadingIcon_: React.ForwardRefRenderFunction<unknown, TPropsIconComponent> = (\n    props,\n    ref,\n) => {\n    const { LoadingIcon }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <LoadingIcon ref={ref} {...props} />\n    );\n};\n\n\nexport const LoadingIcon = React.memo(React.forwardRef(LoadingIcon_));\n","import React from 'react';\n\nimport { Button } from '../Button';\nimport { LoadingIcon } from '../LoadingIcon';\nimport {\n    TIconEmbed, TPropsButton, TSpecSize,\n} from '../types';\n\n\nconst labelSizes: Readonly<Record<TSpecSize, TSpecSize>> = {\n    xxsm: 'xsm',\n    xsm: 'xsm',\n    sm: 'sm',\n    md: 'sm',\n    lg: 'md',\n    xlg: 'lg',\n    xxlg: 'xlg',\n    auto: 'md',\n};\n\nconst iconSizes: Readonly<Record<TSpecSize, number>> = {\n    xxsm: 18,\n    xsm: 18,\n    sm: 18,\n    md: 36,\n    lg: 36,\n    xlg: 36,\n    xxlg: 36,\n    auto: 36,\n};\n\n\nconst Loading_: React.ForwardRefRenderFunction<unknown, TPropsButton> = (\n    {\n        icons = null,\n        size = null,\n        sizeText = null,\n        font = null,\n        direction = null,\n        shape = null,\n        border = null,\n        shadow = null,\n        shadowText = null,\n        colors = null,\n        ...propsButton\n    }: TPropsButton,\n    ref,\n) => {\n    const sizeFinal: TSpecSize = size || 'md';\n    const indicatorSize: number = iconSizes[sizeFinal] || 36;\n    const labelSize = labelSizes[sizeFinal];\n    \n    const iconsDefault = React.useMemo(\n        () => [{\n            Component: LoadingIcon,\n            sizeIcon: indicatorSize ?? 36,\n            size: indicatorSize === 18 ? 'sm' : 'md',\n        } as TIconEmbed],\n        [indicatorSize],\n    );\n    \n    const directionFinal = direction || 'column';\n    \n    return (\n        <Button\n            ref={ref}\n            {...propsButton}\n            colors={colors || 'secondarytext'}\n            icons={icons || iconsDefault}\n            size={directionFinal === 'column' ? 'auto' : sizeFinal}\n            sizeText={sizeText || labelSize}\n            font={font || 'regular'}\n            shape={shape || 'none'}\n            border={border || 'none'}\n            shadow={shadow || 'none'}\n            shadowText={shadowText || 'none'}\n            direction={direction || 'column'}\n        />\n    );\n};\n\n\nexport const Loading = React.memo(React.forwardRef(Loading_));\n","import React from 'react';\n\nimport { Flex } from '../Flex';\nimport { Loading } from '../Loading';\nimport { TPropsLoadingView } from '../types';\n\n\nconst LoadingView_: React.FunctionComponent<TPropsLoadingView> = ({\n    style = null,\n    colorsContainer = null,\n    isHidden = null,\n    padding = null,\n    margin = null,\n    href = null,\n    onPress = null,\n    testId = null,\n    isDisabled = null,\n    shape = null,\n    border = null,\n    shadow = null,\n    isLoading = null,\n    children = null,\n    label = null,\n    ...propsLoading\n}: TPropsLoadingView) => {\n    const {\n        flex,\n        direction,\n        justify,\n        align,\n    } = propsLoading;\n    return (\n        <Flex\n            style={style}\n            colors={colorsContainer || 'secondary'}\n            isHidden={isHidden}\n            padding={padding}\n            margin={margin}\n            flex={flex}\n            href={href}\n            onPress={onPress}\n            testId={testId}\n            isDisabled={isDisabled}\n            shape={shape}\n            border={border}\n            shadow={shadow}\n        >\n            <Flex\n                flex={flex}\n                colors=\"none\"\n                isHidden={isLoading}\n                direction={direction}\n                justify={justify}\n                align={align}\n            >\n                {children}\n            </Flex>\n            {isLoading && (\n                <Loading\n                    {...propsLoading}\n                    label={label || 'Loading...'}\n                />\n            )}\n        </Flex>\n    );\n};\n\n\nexport const LoadingView = React.memo(LoadingView_);\n","import React from 'react';\n\nimport { TMentionContext } from '../types';\nimport { MentionContext } from '../MentionContext';\n\n\ntype TProps = Partial<TMentionContext> & Readonly<{\n    children?: React.ReactNode;\n}>;\n\n\nconst MentionProvider_: React.FunctionComponent<TProps> = ({\n    name = null,\n    colors = null,\n    colorsSelf = null,\n    children = null,\n}) => {\n    const value: TMentionContext = React.useMemo(\n        () => ({\n            name, colors, colorsSelf,\n        }),\n        [name, colors, colorsSelf],\n    );\n    \n    return (\n        <MentionContext.Provider value={value}>\n            {children}\n        </MentionContext.Provider>\n    );\n};\n\nexport const MentionProvider = React.memo(MentionProvider_);\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsModal,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst Modal_: React.ForwardRefRenderFunction<unknown, TPropsModal> = (props, ref) => {\n    const { Modal }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <Modal ref={ref} {...props} />\n    );\n};\n\n\nexport const Modal = React.memo(React.forwardRef(Modal_));\n","import React from 'react';\n\nimport { getLogger } from '../utils/log-interface';\nimport { TModalContext } from '../types';\n\n\nexport const ModalContext = React.createContext<TModalContext>({\n    showModal: () => { getLogger().warn('ModalProvider.showModal not assigned.'); },\n    hideModal: () => { getLogger().warn('ModalProvider.hideModal not assigned.'); },\n    showToast: () => { getLogger().warn('ModalProvider.showToast not assigned.'); },\n});\n","import React from 'react';\n\nimport { Flex } from '../Flex';\nimport { Divider } from '../Divider';\nimport { ListItem } from '../ListItem';\nimport { TButtonOnPress, TPropsSection } from '../types';\n\n\nconst Section_: React.ForwardRefRenderFunction<unknown, TPropsSection> = (\n    {\n        // unused\n        select = null,\n        \n        // header\n        size = null,\n        sizeText = null,\n        icons = null,\n        label = null,\n        lines = null,\n        children = null,\n        header = null,\n        flexText = null,\n        font = null,\n        shadowText = null,\n        colors = null,\n        href = null,\n        onPress = null,\n        isActive = null,\n        isDisabled = null,\n        buttonGroup = null,\n        justify = null,\n        align = null,\n        divider = null,\n        \n        ...propsFlex\n    }: TPropsSection,\n    ref,\n) => {\n    const press: TButtonOnPress = React.useCallback(\n        (e, name) => {\n            if (typeof name === 'string' && onPress) {\n                onPress(e, name);\n            }\n        },\n        [onPress],\n    );\n    \n    return (\n        <>\n            <Flex\n                ref={ref}\n                {...propsFlex}\n            >\n                <ListItem\n                    size={size || 'xsm'}\n                    icons={icons}\n                    label={label}\n                    lines={lines}\n                    flexText={flexText}\n                    font={font || 'semi'}\n                    sizeText={sizeText || 'lg'}\n                    shadowText={shadowText}\n                    colors={colors}\n                    href={href}\n                    isActive={isActive}\n                    isDisabled={isDisabled}\n                    justify={justify}\n                    align={align}\n                    buttonGroup={buttonGroup}\n                    onPress={onPress && press}\n                >\n                    {header}\n                </ListItem>\n                {children}\n            </Flex>\n            {!!divider && (\n                <Divider {...divider} />\n            )}\n        </>\n    );\n};\n\nexport const Section = React.memo(React.forwardRef(Section_));\n","import React from 'react';\n\nimport { Button } from '../Button';\nimport { emptyString } from '../constants/empty';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\nimport {\n    TButtonGroupOnPress,\n    TIconEmbedList,\n    TModalSelectEmbed,\n    TFlexEmbed,\n    TTextEmbed,\n    TSelectVariant,\n    TPropsSelect,\n    TColorsProp,\n} from '../types';\n\n\ntype TVariantOpts = Readonly<{\n    colors: TFlexEmbed['colors'];\n    colorsActive: TFlexEmbed['colors'];\n    border: TFlexEmbed['border'];\n    justify: TFlexEmbed['justify'];\n    sizeText: TTextEmbed['size'];\n}>;\n\ntype TVariantMap = Record<TSelectVariant, TVariantOpts>;\n\nconst variantMap: TVariantMap = {\n    ghost: {\n        colors: 'secondaryghost',\n        colorsActive: 'primaryghost',\n        border: 'md',\n        justify: 'space-between',\n        sizeText: 'md',\n    },\n    text: {\n        colors: 'secondarytext',\n        colorsActive: 'primarytext',\n        border: 'none',\n        justify: 'flex-start',\n        sizeText: 'sm',\n    },\n};\n\n\nconst Select_: React.ForwardRefRenderFunction<unknown, TPropsSelect> = (\n    {\n        label = null,\n        placeholder = null,\n        active = null,\n        options = null,\n        onChange = null,\n        variant = null,\n        colors = null,\n        colorsActive = null,\n        sizeText = null,\n        overlayStyle = null,\n        backgroundStyle = null,\n        isNonBlocking = null,\n        font = null,\n        border = null,\n        justify = null,\n        padding = null,\n        icons = null,\n        shape = null,\n        alignText = null,\n        shadow = null,\n        ...propsButton\n    }: TPropsSelect,\n    ref,\n) => {\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const caretIcon = React.useMemo<TIconEmbedList>(\n        () => [null, simpleCodeIcons.caretDown],\n        [simpleCodeIcons.caretDown],\n    );\n    \n    const activeValue = `${active}`;\n    \n    const labelActive: string = React.useMemo(\n        () => {\n            if (activeValue === null || !(options && options.length)) {\n                return emptyString;\n            }\n            const found = options.find((item) => (item && item.name === activeValue));\n            return found ? (found.label || emptyString) : emptyString;\n        },\n        [options, activeValue],\n    );\n    \n    const press: TButtonGroupOnPress = React.useCallback<TButtonGroupOnPress>(\n        (_e, name) => {\n            if (name === activeValue) {\n                return;\n            }\n            if ((typeof name === 'string' || name === null) && onChange) {\n                const isSelectable = options && options.some((item) => (item && item.name === name));\n\n                if (isSelectable) {\n                    onChange(name as string | null);\n                }\n            }\n        },\n        [activeValue, onChange, options],\n    );\n    \n    const selectEmbed: TModalSelectEmbed = React.useMemo<TModalSelectEmbed>(\n        () => ({\n            buttons: options,\n            active: activeValue,\n            overlayStyle,\n            backgroundStyle,\n            isNonBlocking,\n        }),\n        [options, activeValue, overlayStyle, backgroundStyle, isNonBlocking],\n    );\n    \n    const variantOpts: TVariantOpts = variantMap[variant || 'ghost'];\n    \n    const variantColors: TColorsProp | null | undefined = labelActive\n        ? (colorsActive || variantOpts.colorsActive)\n        : (colors || variantOpts.colors);\n    \n    return (\n        <Button\n            ref={ref}\n            {...propsButton}\n            label={label || labelActive || placeholder || ' '}\n            onPress={press}\n            colors={variantColors}\n            sizeText={sizeText || variantOpts.sizeText}\n            select={selectEmbed}\n            font={font || (labelActive ? 'semi' : 'regular')}\n            border={border || variantOpts.border}\n            justify={justify || variantOpts.justify}\n            padding={padding ?? 10}\n            icons={icons || caretIcon}\n            shape={shape || 'md'}\n            alignText={alignText || 'left'}\n            shadow={shadow || 'none'}\n        />\n    );\n};\n\n\nexport const Select = React.memo(React.forwardRef(Select_));\n","import React from 'react';\n\nimport { TSimpleCodeUiContext } from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\nimport { defaultSimpleCodeUiContext } from '../SimpleCodeUiContext/SimpleCodeUiContext';\n\n\ntype TProps = Partial<TSimpleCodeUiContext> & Readonly<{\n    children?: React.ReactNode;\n}>;\n\n\nconst SimpleCodeUiProvider_: React.FunctionComponent<TProps> = ({\n    children = null,\n    Flex,\n    TextFragment,\n    ModalSelect,\n    Toast,\n    InputZone,\n    LoadingIcon,\n    Modal,\n    icons,\n    transformText,\n}) => {\n    const value = React.useMemo<TSimpleCodeUiContext>(\n        () => ({\n            ...defaultSimpleCodeUiContext,\n            Flex,\n            TextFragment,\n            ModalSelect,\n            Toast,\n            InputZone,\n            LoadingIcon,\n            Modal,\n            icons,\n            transformText,\n        } as TSimpleCodeUiContext),\n        [\n            Flex, TextFragment, ModalSelect, Toast, InputZone,\n            LoadingIcon, Modal, icons, transformText,\n        ],\n    );\n    \n    return (\n        <SimpleCodeUiContext.Provider value={value}>\n            {children}\n        </SimpleCodeUiContext.Provider>\n    );\n};\n\nexport const SimpleCodeUiProvider = React.memo(SimpleCodeUiProvider_);\n","import React from 'react';\n\nimport type {\n    TStyle, TIconEmbedList, TPropsSwitch,\n} from '../types';\nimport { Button } from '../Button';\nimport { useSwitch } from '../hooks/use-switch';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst minWidth: TStyle = { minWidth: 50 };\n\n\nconst Switch_: React.ForwardRefRenderFunction<unknown, TPropsSwitch> = (\n    {\n        colors = null,\n        colorsActive = null,\n        onChange = null,\n        style = null,\n        value = false,\n        icons = null,\n        shadow = null,\n        ...propsButton\n    },\n    ref,\n) => {\n    const { isDisabled = null } = propsButton;\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const handleIcon = React.useMemo<TIconEmbedList>(\n        () => [simpleCodeIcons.switchHandle],\n        [simpleCodeIcons.switchHandle],\n    );\n    \n    const { switchValue, toggle } = useSwitch({ onChange, value, isDisabled });\n    \n    const buttonStyle: TStyle = React.useMemo<TStyle>(\n        () => (style ? [minWidth, style] : minWidth),\n        [style],\n    );\n    \n    return (\n        <Button\n            colors=\"none\"\n            justify=\"flex-start\"\n            shadow=\"none\"\n            onPress={toggle}\n            ref={ref}\n            size=\"md\"\n            shape=\"none\"\n        >\n            <Button\n                {...propsButton}\n                icons={icons || handleIcon}\n                justify=\"flex-start\"\n                direction={switchValue ? 'row-reverse' : 'row'}\n                size=\"xxsm\"\n                shadow={shadow || 'none'}\n                colors={colors || 'secondary'}\n                colorsActive={colorsActive || 'tertiary'}\n                flexText={1}\n                isActive={switchValue}\n                style={buttonStyle}\n            />\n        </Button>\n    );\n};\n\nexport const Switch = React.memo(React.forwardRef(Switch_));\n","import React from 'react';\n\nimport { ButtonGroup } from '../ButtonGroup';\nimport { Flex } from '../Flex';\nimport {\n    TButtonEmbedNamed,\n    TButtonGroupOnPress,\n    TModalSelectEmbed,\n    TButtonEmbedNamedList,\n    TPropsTabs,\n    TIconEmbedList,\n} from '../types';\nimport { emptyArray } from '../constants/empty';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst convertToMainItem = (\n    named: TButtonEmbedNamed,\n    isScrollable: boolean,\n): TButtonEmbedNamed => ({\n    ...named,\n    name: named.name,\n    label: named.label,\n    padding: isScrollable ? '0 8' : null,\n    shadow: 'none',\n    flex: isScrollable ? -1 : null,\n});\n\nconst convertToHiddenItem = (named: TButtonEmbedNamed): TButtonEmbedNamed => ({\n    name: named.name,\n    label: named.label,\n});\n\n\nconst Tabs_: React.FunctionComponent<TPropsTabs> = ({\n    countVisible = null,\n    tabs = null,\n    active = null,\n    onChange = null,\n    isDisabled = null,\n    spacing = null,\n    countInitial = null,\n    countBatch = null,\n    interval = null,\n    shadow = null,\n    direction = null,\n    colors = null,\n    colorsActive = null,\n    ...propsFlex\n}: TPropsTabs) => {\n    const { icons: simpleCodeIcons } = React.useContext(SimpleCodeUiContext);\n    \n    const caretIcon = React.useMemo<TIconEmbedList>(\n        () => [simpleCodeIcons.caretDown],\n        [simpleCodeIcons.caretDown],\n    );\n    \n    const activeValue = `${active}`;\n    \n    const visibleTabs: TButtonEmbedNamedList = React.useMemo<TButtonEmbedNamedList>(\n        () => {\n            if (countVisible) {\n                return tabs?.slice(0, countVisible) ?? emptyArray;\n            }\n            return tabs ?? emptyArray;\n        },\n        [countVisible, tabs],\n    );\n    \n    const hiddenTabs = React.useMemo<TButtonEmbedNamedList>(\n        () => {\n            if (countVisible) {\n                return tabs?.slice(countVisible) ?? emptyArray;\n            }\n            return emptyArray;\n        },\n        [countVisible, tabs],\n    );\n    \n    const visibleItems = React.useMemo<TButtonEmbedNamedList>(\n        () => visibleTabs.map(\n            (item) => (item ? convertToMainItem(item, !countVisible) : null),\n        ),\n        [visibleTabs, countVisible],\n    );\n    const hiddenItems = React.useMemo<TButtonEmbedNamedList>(\n        () => hiddenTabs.map(\n            (item) => (item ? convertToHiddenItem(item) : null),\n        ),\n        [hiddenTabs],\n    );\n    \n    const isMainSelect = React.useMemo<boolean>(\n        () => visibleItems.some((item) => (item?.name === activeValue)),\n        [activeValue, visibleItems],\n    );\n    \n    const press: TButtonGroupOnPress = React.useCallback(\n        (_event, name) => {\n            if (typeof name === 'string') {\n                if (name === '__more') {\n                    return;\n                }\n                if (onChange) {\n                    onChange(name);\n                }\n            }\n        },\n        [onChange],\n    );\n    \n    const buttons = React.useMemo<TButtonEmbedNamedList>(\n        () => [\n            ...visibleItems,\n            ...(\n                hiddenItems.length > 0\n                    ? [{\n                        name: '__more',\n                        shadow: 'sm',\n                        flex: -1,\n                        icons: caretIcon,\n                        select: {\n                            buttons: hiddenItems,\n                            active: activeValue,\n                        } as TModalSelectEmbed,\n                    } as TButtonEmbedNamed]\n                    : emptyArray\n            ),\n        ],\n        [visibleItems, hiddenItems, caretIcon, activeValue],\n    );\n    \n    const buttonRow = (\n        <ButtonGroup\n            flex={countVisible ? 1 : null}\n            border=\"md.bottom\"\n            colors={colors || 'primary'}\n            colorsActive={colorsActive || 'accentghost'}\n            font=\"regular\"\n            sizeText=\"sm\"\n            fontActive=\"semi\"\n            onPress={press}\n            active={isMainSelect === false ? '__more' : activeValue}\n            buttons={buttons}\n            isDisabled={isDisabled}\n            spacing={spacing}\n            countInitial={countInitial}\n            countBatch={countBatch}\n            interval={interval}\n        />\n    );\n    \n    return (\n        <Flex\n            {...propsFlex}\n            shadow={shadow || 'md'}\n            direction={direction || 'row'}\n            colors={colors || 'primary'}\n        >\n            {buttonRow}\n        </Flex>\n    );\n};\n\n\nexport const Tabs = React.memo(Tabs_);\n","import React from 'react';\n\nimport { TUnknownObject } from '../types';\n\n\ndeclare global {\n    function __reanimatedWorkletInit(): void;\n    \n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    namespace JSX {\n        interface IntrinsicElements {\n            'test-mock': unknown;\n        }\n    }\n}\n\n\nconst TestMock_: React.ForwardRefRenderFunction<unknown, TUnknownObject> = (props, ref) => {\n    return (\n        <test-mock ref={ref} {...props} />\n    );\n};\n\nexport const TestMock = React.memo(React.forwardRef(TestMock_));\n","import React from 'react';\n\nimport {\n    TThemeContext, TTheme,\n} from '../types';\nimport {\n    getThemeBorderGetter, getThemeColorGetter, getThemeFontGetter, getThemeShadowGetter,\n    getThemeShadowTextGetter, getThemeShapeGetter, getThemeSizeGetter, getThemeColorSetGetter,\n} from '../utils/get-theme-getter';\nimport { ThemeContext } from '../ThemeContext';\nimport { defaultTheme } from '../constants/default-theme';\n\n\ntype TProps = Readonly<{\n    theme?: TTheme | null;\n    children: React.ReactNode;\n}>;\n\n\nconst ThemeProvider_: React.FunctionComponent<TProps> = ({\n    children = null,\n    theme = null,\n}: TProps) => {\n    const themeFinal = theme || defaultTheme;\n    const value = React.useMemo<TThemeContext>(\n        () => ({\n            theme: themeFinal,\n            getShape: getThemeShapeGetter(themeFinal),\n            getBorder: getThemeBorderGetter(themeFinal),\n            getSize: getThemeSizeGetter(themeFinal),\n            getFont: getThemeFontGetter(themeFinal),\n            getShadow: getThemeShadowGetter(themeFinal),\n            getShadowText: getThemeShadowTextGetter(themeFinal),\n            getColor: getThemeColorGetter(themeFinal),\n            getColorBg: getThemeColorSetGetter(themeFinal, 'bg'),\n            getColorText: getThemeColorSetGetter(themeFinal, 'text'),\n            getColorBorder: getThemeColorSetGetter(themeFinal, 'border'),\n        }),\n        [themeFinal],\n    );\n    \n    return (\n        <ThemeContext.Provider value={value}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport const ThemeProvider = React.memo(ThemeProvider_);\n","import React from 'react';\n\nimport {\n    TSimpleCodeUiContext,\n    TPropsToast,\n} from '../types';\nimport { SimpleCodeUiContext } from '../SimpleCodeUiContext';\n\n\nconst Toast_: React.ForwardRefRenderFunction<unknown, TPropsToast> = (\n    props,\n    ref,\n) => {\n    const { Toast }: TSimpleCodeUiContext = React.useContext(SimpleCodeUiContext);\n    \n    return (\n        <Toast ref={ref} {...props} />\n    );\n};\n\n\nexport const Toast = React.memo(React.forwardRef(Toast_));\n"],"names":["hiddenStyle","position","width","maxWidth","height","maxHeight","padding","overflow","fullStyle","top","bottom","left","right","specColors","black","white","sizes","font","xxsm","xsm","sm","md","lg","xlg","xxlg","auto","line","button","icon","item","divider","fonts","regular","semi","bold","mono","shadows","none","shadowsText","getTopShape","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","getBottomShape","getLeftShape","getRightShape","getShapesForRadius","all","borderRadius","shapes","rounded","getTopBorder","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderBottomColor","getBottomBorder","borderTopColor","getLeftBorder","borderRightColor","getRightBorder","borderLeftColor","getBordersForWidth","borderWidth","borders","defaultColorSet","text","textHover","textActive","bg","bgHover","bgActive","border","borderHover","borderActive","defaultColorSetGhost","defaultColorSetText","colorSets","primary","primaryghost","primarytext","secondary","secondaryghost","secondarytext","tertiary","tertiaryghost","tertiarytext","accent","accentghost","accenttext","success","successghost","successtext","warning","warningghost","warningtext","error","errorghost","errortext","light","lightghost","lighttext","grey","greyghost","greytext","dark","darkghost","darktext","defaultTheme","colors","spec","primaryplus","primaryminus","primaryalt","primaryaltplus","primaryaltminus","secondaryplus","secondaryminus","tertiaryplus","tertiaryminus","accentplus","accentminus","successplus","successminus","warningplus","warningminus","errorplus","errorminus","contrast","emptyArray","emptyObject","emptyString","emptyFunction","Object","freeze","useSwitch","_a","_b","onChange","_c","value","_d","isDisabled","_e","React","useState","switchValue","setSwitchValue","useEffect","toggle","useCallback","newSwitchValue","useCallbackRef","fn","selectRef","useRef","current","selectRefMemoized","useMemo","args","_i","arguments","length","apply","useFlag","initialValue","isActive","setIsActive","activate","deactivate","useInput","onChangeText","onBlur","onFocus","isPassVisible","setIsPassVisible","isFocused","setIsFocused","togglePassVisible","event","preventDefault","clear","focus","unfocus","useMention","setText","mention","setMention","mentionRef","updateMention","valueOrCb","newValue","clearMention","applyMention","slice","concat","useMounted","isMounted","mounted","usePressButtons","active","behavior","onPress","press","e","buttons","name","activeArray","buttonsString","includes","nameAt","findIndex","v","__spreadArray","useStringOption","setValue","setNotEmpty","hashIntoColor","str","hash","i","charCodeAt","color","toString","padStart","defaultColor","takeSpecColor","borderZero","getAllBorder","__assign","mapBorders","transparentBg","transparentBorder","createFlatColorset","createGhostColorset","createTextColorset","createStateColorsetTriplet","getElevationShadow","elevation","shadowColor","zIndex","shadowOffset","shadowOpacity","shadowRadius","mapShadows","mapShadowsText","textShadowColor","textShadowOffset","textShadowRadius","mapShapes","logger","debug","info","warn","getLogger","setLogger","newLogger","parseHrefCached","createCachedSelector","anchor","transformText","matched","match","href","key","input","getAnchorLinksCached","_input","at","indexOf","search","result","rest","getPlainLinksCached","replace","mapHrefs","hrefs","forEach","links","map","link","join","getAnchors","getConditionalItems","isAvailable","getCssArgs","split","getCssSidesN","_name","splitted","mapped","Number","isNaN","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","getCssSides","getErrorMessage","defaultMessage","Error","message","getMargins","getSyntaxMentionsCached","push","isMention","dividerIdx","id","getPlainMentionsCached","mapMentions","parts","mentions","getMentions","getPaddings","lowerEndings","reg","upperEndings","toUpperCase","allEndings","createReplacer","RegExp","replacers","getPluralForm","label","isLabelChanged","some","replacer","newStr","test","getRandomColor","Math","random","getNested","path","source","pathSegments","count","undefined","segment0","nest1","segment1","segment","getThemeVariantGetter","theme","field","nest","getThemeShapeGetter","getShape","getThemeBorderGetter","getBorder","getThemeSizeGetter","getSize","prefix","getThemeFontGetter","getFont","getThemeShadowGetter","getShadow","getThemeShadowTextGetter","getShadowText","getThemeColorGetter","getColor","getThemeColorSetGetter","_theme","kind","getter","state","finalColorset","createTypedObjectify","_key","objectify","removeItem","array","index","replaceItem","defaultShowToast","showToastCached","setShowToast","newShowToast","showToast","props","showToastError","lineColors","showToastSuccess","toError","updateItem","fields","validateEmail","email","re","toLowerCase","withAsync","Component","Fallback","delay","Async","isVisible","show","setTimeout","createElement","withBoundary","_super","__extends","ErrorBoundary","_this","call","getDerivedStateFromError","prototype","componentDidCatch","duration","render","getFakeComponent","forwardRef","getFakeIcon","emptyIcons","caretDown","radioOn","radioOff","checkboxOn","checkboxOff","switchHandle","defaultSimpleCodeUiContext","Flex","TextFragment","ModalSelect","Toast","InputZone","LoadingIcon","Modal","icons","SimpleCodeUiContext","createContext","Flex_","ref","useContext","memo","Abs_","style","propsFlex","__rest","absStyle","Abs","TextFragment_","IconEmpty_","size","iconStyle","fontSize","IconEmpty","defaultContext","getColorBg","getColorText","getColorBorder","ThemeContext","Icon_","sizeIcon","rotation","shadowIcon","align","justify","themeContext","FinalIcon","finalSize","minSize","minHeight","minWidth","lineHeight","textAlign","transform","rotate","containerStyle","Icon","MentionContext","colorsSelf","colorsDefault","Mention_","shadow","shadowBox","shape","propsTextFragment","children","isSelf","isOpaque","Mention","Mentions_","hasMentions","isDecorated","unescaped","Fragment","Mentions","Highlighted_","descs","desc","Highlighted","Txt_","Txt","getButtonPadding","isColumn","isAuto","styleNoBg","backgroundColor","borderColor","getIconPropsInner","getIconProps","getSizeStyle","getButtonStyle","sizeStyle","_sizeStyle","customStyle","useButtonStyle","buttonStyle","sizeValue","ModalSelect_","Button_","iconsActive","labelActive","lines","fontActive","colorsActive","select","direction","_w","sizeText","sizeIcons","flexText","alignText","shadowText","_x","isHover","pressIn","pressOut","_y","isSelectVisible","hideSelect","toggleSelect","sizeFinal","sizeIconsFinal","isSelectable","iconsFinal","labelFinal","fontFinal","colorsFinal","paddingFinal","pressSelect","_z","_0","iconLeftProps","_1","iconRightProps","flexRef","onPressIn","onPressOut","flex","isHidden","onClose","targetRef","Button","buttonPaddings","iconSizes","iconMargins","getIconPair","iconOn","iconOff","margin","inactive","getColoredIcon","initial","ButtonCheck_","colorsIcon","propsButton","simpleCodeIcons","sizeTextFinal","sizedIcons","checkActive","checkEmpty","ButtonCheck","defaultCountBatch","defaultInterval","useProgressiveArray","items","onRenderItem","countInitial","countBatch","interval","countCurrent","setCountCurrent","countTotal","itemsFinal","itemsCurrent","timeoutRef","clearTimeout","countNext_1","min","ListProgressive_","elements","ListProgressive","isFirst","isLast","baseShape","getButtonShape","buttonShape","lastI","finalShape","renderItem","ButtonGroup_","_2","_3","spacing","_4","_5","pressNamed","buttonName","modifiedButtons","finalSpacing","flexBase","mergedButton","marginTop","marginLeft","ButtonGroup","ButtonRadio_","radioActive","radioEmpty","ButtonRadio","ButtonGroupRadio_","propsButtonGroup","ButtonGroupRadio","Checkbox_","propsButtonCheck","Checkbox","Divider_","Divider","buttonSizes","ListItem_","onPressButton","buttonGroup","pressButton","stopPropagation","buttonGroupProps","finalShadow","ListItem","InputZone_","inputWrapper","Input_","isBlurOnSubmit","isMulti","placeholder","onMention","max","colorsPlaceholder","keyboardType","secureTextEntry","autoCapitalize","autoCorrect","initialLines","isReadonly","onSubmit","returnKeyType","_6","custom","propsListItem","_7","_8","_9","_10","testId","_11","focuser","setFocuser","_12","valueOwn","setValueOwn","mentionDictRef","newMentions","newDict","reduce","accum","next","pressItem","finalSizeText","placeholderTextColor","wrapperStyle","themeStyle","opacity","updateText","replaced","values","replaceAll","pendingMention","noPending","onFocuser","Input","KeyboardContext","List_","_13","_14","_15","modifiedItems","mergedItem","defaultRenderItem","List","LoadingIcon_","labelSizes","Loading_","indicatorSize","labelSize","iconsDefault","directionFinal","Loading","LoadingView_","colorsContainer","isLoading","propsLoading","LoadingView","MentionProvider_","Provider","MentionProvider","Modal_","ModalContext","showModal","hideModal","Section_","header","Section","variantMap","ghost","Select_","options","variant","overlayStyle","backgroundStyle","isNonBlocking","caretIcon","activeValue","found","find","selectEmbed","variantOpts","variantColors","Select","SimpleCodeUiProvider_","SimpleCodeUiProvider","Switch_","handleIcon","Switch","convertToMainItem","named","isScrollable","convertToHiddenItem","Tabs_","countVisible","tabs","visibleTabs","hiddenTabs","visibleItems","hiddenItems","isMainSelect","_event","buttonRow","Tabs","TestMock_","TestMock","ThemeProvider_","themeFinal","ThemeProvider","Toast_"],"mappings":"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"}