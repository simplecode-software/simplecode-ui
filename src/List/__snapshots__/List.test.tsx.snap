// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`spec/List renders [EMPTY] 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column"
    events={null}
    flex={null}
    isHidden={null}
    justify="flex-start"
    margin={null}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding={null}
    state={null}
    style={null}
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 02e124cde3 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={true}
    justify="flex-start"
    margin={null}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding={null}
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 06ce13aad4 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-end"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={false}
    justify="flex-end"
    margin={10}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding={10}
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 06e1b7f63f 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={true}
    justify="flex-start"
    margin={null}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding={null}
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 06f940b014 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column"
    events={null}
    flex={null}
    isHidden={null}
    justify="flex-end"
    margin={10}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding={10}
    state={null}
    style={null}
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 06f9554c7 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={null}
    justify="flex-start"
    margin={null}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding={null}
    state={null}
    style={null}
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 016a0fda54 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-end"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={false}
    justify="flex-start"
    margin={0}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding={0}
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 051fa5d37a 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="baseline"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={false}
    justify="space-between"
    margin="5 15 3"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding="5 15 3"
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 059c3b4b80 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column"
    events={null}
    flex={null}
    isHidden={true}
    justify="center"
    margin="5 15"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding="5 15"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 062ff45dcd 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-end"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={false}
    justify="space-around"
    margin="1 2 3 4"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding="1 2 3 4"
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 073ea1a6f7 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={true}
    justify="flex-start"
    margin={0}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding={0}
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 097efa8437 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="baseline"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={false}
    justify="center"
    margin="5 15"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding="5 15"
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0236d0108d 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="baseline"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={false}
    justify="flex-end"
    margin={10}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding={10}
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0377b3e249 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={null}
    justify="center"
    margin="5 15"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding="5 15"
    state={null}
    style={null}
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0471cb0b75 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-end"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={false}
    justify="flex-start"
    margin={null}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding={null}
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0967d5fd02 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="column"
    events={null}
    flex={null}
    isHidden={true}
    justify="space-between"
    margin="5 15 3"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding="5 15 3"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 04518a41b5 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="baseline"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={false}
    justify="flex-start"
    margin={0}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding={0}
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 06031d4103 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="baseline"
    direction="column"
    events={null}
    flex={null}
    isHidden={false}
    justify="space-around"
    margin="1 2 3 4"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding="1 2 3 4"
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 045934b010 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={true}
    justify="flex-start"
    margin={0}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding={0}
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 091427eb89 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={null}
    justify="center"
    margin="5 15"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding="5 15"
    state={null}
    style={null}
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0110387a7f 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={null}
    justify="space-around"
    margin="1 2 3 4"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding="1 2 3 4"
    state={null}
    style={null}
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 0dde976045 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={true}
    justify="space-between"
    margin="5 15 3"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding="5 15 3"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 4efc08112 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="column"
    events={null}
    flex={null}
    isHidden={null}
    justify="flex-start"
    margin={0}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding={0}
    state={null}
    style={null}
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 5ac3950b5 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={null}
    justify="flex-end"
    margin={10}
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding={10}
    state={null}
    style={null}
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 7a924ff76 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={true}
    justify="space-evenly"
    margin="-1 -2 -3 -4"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={0}
    padding="-1 -2 -3 -4"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 7ce2e416e 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="column"
    events="box-only"
    flex={1}
    isHidden={null}
    justify="space-between"
    margin="5 15 3"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding="5 15 3"
    state={null}
    style={null}
    testId="Label"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 41e045b79 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-end"
    direction="column"
    events={null}
    flex={null}
    isHidden={false}
    justify="space-evenly"
    margin="-1 -2 -3 -4"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding="-1 -2 -3 -4"
    state="hover"
    style={
      {
        "position": "absolute",
      }
    }
    testId={null}
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 75ee2d014 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="stretch"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={true}
    justify="flex-end"
    margin={10}
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={null}
    padding={10}
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 422b0f88d 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="row-reverse"
    events="none"
    flex={0}
    isHidden={null}
    justify="space-evenly"
    margin="-1 -2 -3 -4"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding="-1 -2 -3 -4"
    state={null}
    style={null}
    testId="button-name"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 644bb32ff 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="column-reverse"
    events="auto"
    flex={2}
    isHidden={true}
    justify="space-around"
    margin="1 2 3 4"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding="1 2 3 4"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId=""
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders 19458bf9a 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="center"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={null}
    justify="space-evenly"
    margin="-1 -2 -3 -4"
    onPressIn={null}
    onPressOut={null}
    onState={null}
    opacityDisabled={0.5}
    padding="-1 -2 -3 -4"
    state={null}
    style={null}
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;

exports[`spec/List renders f8b9c498f 1`] = `
<test-mock
  events="auto"
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <test-mock
    align="flex-start"
    direction="row"
    events="box-none"
    flex={-1}
    isHidden={true}
    justify="center"
    margin="5 15"
    onPressIn={[Function]}
    onPressOut={[Function]}
    onState={[Function]}
    opacityDisabled={1}
    padding="5 15"
    state="active"
    style={
      {
        "width": 100,
      }
    }
    testId="test-id"
  >
    <test-mock
      countBatch={null}
      countInitial={-1}
      interval={null}
      items={[]}
      onRenderItem={[Function]}
    />
  </test-mock>
  <test-mock
    style={
      [
        {
          "bottom": 0,
          "height": undefined,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": undefined,
        },
        {
          "pointerEvents": "none",
          "position": "fixed",
          "zIndex": 1000,
        },
      ]
    }
  >
    <test-mock
      align="flex-end"
      events="box-none"
      justify="flex-start"
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "bottom": 100,
            "zIndex": 100,
          },
        ]
      }
    />
  </test-mock>
</test-mock>
`;
